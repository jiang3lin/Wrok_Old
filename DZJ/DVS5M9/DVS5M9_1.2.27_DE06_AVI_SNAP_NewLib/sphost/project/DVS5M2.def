CHIP := 6330

ifndef $PRJ_NAME
	# for makefile
	PRJ_NAME := DVS5M2
	#IQ_NAME  := AR0330
	#IQ_NAME  := AR0330CS
	#IQ_NAME  := OV5610
	#IQ_NAME  := OV5633
	#IQ_NAME  := MT9J003
	IQ_NAME  := OV5653
	#IQ_NAME  := OV2715
	#IQ_NAME  := MI1600
	#IQ_NAME  := OV7740
	#IQ_NAME  := MI1320
	#IQ_NAME  := OV7740_YUV
	#IQ_NAME  := SONYIMX175
	#IQ_NAME  := MI5100p
	#IQ_NAME  := AR0130
	#IQ_NAME  := MT9F002
	HW_NAME := HW_DVS5M2
	HW_VER := PVT
	LENS_NAME := LENS_DEFAULT
	HW_CHIP	:= 6330M
	CFLAGS += -DEVB_TYPE=1
	TOUCH_PANEL := NO
	HW_FACETRACK := YES
	ICATWARE := NO
	SPHOST_LIB_SOURCE_RELEASE := NO
	HW_DIST := YES
	MOTION_DETECT := YES
	CVR := 1
	HDMI_MENU_OPTIMIZATION := YES
	
	ifeq ($(HDMI_MENU_OPTIMIZATION),YES)
	CFLAGS += -DHDMI_MENU_OPTIMIZATION
	endif
	CFLAGS += -DCAM_TYPE_CVR
	
	#AE Type
	#AE_RES_NAME := AEALGCVR.BIN
 	AE_RES_NAME := AEALGSPC.BIN
 	#AE_RES_NAME := AEALGCAM.BIN
 	
 	ifeq ($(HW_CHIP), 6330M)
		CFLAGS += -DSPCA_6330M
	endif

	ifeq ($(PRJ_RLS),1)
	CFLAGS += -DMP_RELEASE=1
	endif
	
	#Use for HW debug,will to disable battery check,APO and button
	#And it will to print the battery ADC value in video record mode
	CFLAGS += -DEZ_DBG_HW=0
 
	#COMPEL Battery Charger
    CFLAGS += -DCOMPEL_CHARGING=1
    
    #COMPEL Power Off Charging
	CFLAGS += -DCOMPEL_POWEROFF_CHARGE=0
	
	#for complier in 5330
	ifeq ($(CHIP), 6330)
	isrimem := 1
	else
	isrimem := 0
	endif
 
	# DRAM
	ifeq ($(CHIP), 6330)
	CFLAGS += -DDDR3=1
	else
	CFLAGS += -DDDR2=1
	endif
	
	# Load Resource from Card
	ifeq ($(CHIP), 6330)
	# enable the following if you use EVB+ROMTER
	#CFLAGS += -DLOAD_RESOURCE_FROM_CARD=1
	endif

  #open wifi here	
  WIFI := 1
  ifeq ($(CHIP), 6330)
  LIVEST :=1
  endif
	
	
        # WIFI (enable if WIFI=1)
	ifdef WIFI
	CFLAGS += -DICAT_WIFI=${WIFI}
	CFLAGS += -DPTP_CAPTURE=1
	else
	CFLAGS += -DICAT_WIFI=0
	endif
	
	#menu show in HDMI with JPG file
	HDMI_MENU_JPG := NO

	# CVR warning system
	### 1. Forward Collision Warning System
	CVR_FCWS := NO
	ifeq ($(CVR_FCWS), YES)
	CFLAGS += -DICAT_FCWS=1
	endif
	### 2. Lane Departure Warning System
	CVR_LDWS := NO
	ifeq ($(CVR_LDWS), YES)
	CFLAGS += -DICAT_LDWS=1
	endif
	### 3. Head Light Warning System
	CVR_HLWS := NO
	ifeq ($(CVR_HLWS), YES)
	CFLAGS += -DICAT_HLWS=1
	endif
	### 4. Speed Limit Warning System
	CVR_SLWS := NO
	ifeq ($(CVR_SLWS), YES)
	CFLAGS += -DICAT_SLWS=1
	endif
	### 5. Sign Recognize Warning System
	CVR_SRWS := NO
	ifeq ($(CVR_SRWS), YES)
	CFLAGS += -DICAT_SRWS=1
	endif
	
ifeq ($(HDMI_MENU_JPG),YES)	
	CFLAGS += -DHDMI_MENU_BY_JPG=1
endif
	
	# Sensor List

	#SENSOR_NAME   := OV2715
	#SENSOR_NAME   := OV5610
	#SENSOR_NAME   := OV5633
	SENSOR_NAME   := OV5653
	#SENSOR_NAME   := OV16820
	#SENSOR_NAME   := OV7740
	#SENSOR_NAME   := MT9J003
	#SENSOR_NAME   := SONYIMX175
	#SENSOR_NAME   := AR0130_DUAL
	#SENSOR_NAME   := AR0130
	#SENSOR_NAME   := SONYIMX117
	#SENSOR_NAME   := AR0330
	#SENSOR_NAME   := AR0330CS
	#SENSOR_NAME   := AR0330CS_PLCC
	#SENSOR_NAME   := AR0331
	#SENSOR_NAME   := MI1600
	#SENSOR_NAME   := MI1320
	#SENSOR_NAME   := OV7740_YUV
	#SENSOR_NAME   := MI5100p
	#SENSOR_NAME   := MT9F002
	#SENSOR_NAME   := OV8810
	#SENSOR_NAME   := OV8825
	#SENSOR_NAME   := OV8830
	#SENSOR_NAME   := OV8833
  	#SENSOR_NAME   := OV9713
	#SENSOR_NAME   := TVP5150
  	#SENSOR_NAME   := OV9714

  #AFE_NAME         := $(SENSOR_NAME)
  
  SENSOR_CUSTOM_DEFINE  := YES
  SENSOR_$(SENSOR_NAME) := YES
  
  CFLAGS += -DSP5K_SENSOR_CUSTOM_DEFINE
  CFLAGS += -DSP5K_SENSOR_$(SENSOR_NAME)=1



  # lcd
  CFLAGS += -DSP5K_LCD_CUSTOM_DEFINE
  #CFLAGS += -DSP5K_LCD_A025BN01_UPS051=1
  #CFLAGS += -DSP5K_LCD_A025BN01_UPS052=1
  #CFLAGS += -DSP5K_LCD_TD025THEEA_UPS052=1
  #CFLAGS += -DSP5K_LCD_TXDT250C_UPS052=1
  #CFLAGS += -DSP5K_LCD_WDF9648W7FLWA_UPS052=1
  #CFLAGS += -DSP5K_LCD_WDF9648W7FLWA_UPS051=1
  #CFLAGS += -DSP5K_LCM_TXDT240TQ_LCM_H=1
  #CFLAGS += -DSP5K_LCM_TXDT240TQ_LCM_V=1
  #CFLAGS += -DSP5K_LCD_DUMMY=1
  #CFLAGS += -DSP5K_LCD_A025BN01_YUV_W720=1
  #CFLAGS += -DSP5K_LCM_DJN_ILI9225=1
  CFLAGS += -DSP5K_LCM_VSN_M01120=1

  # 3A Algorithm
  CFLAGS += -DSP5K_ALGORITHM_AWB=1
  #ALGORITHM_AWB := 1
  #ALGORITHM_G3_AWB := 1
  #ALGORITHM_G4_AWB := 1
  ALGORITHM_G46_AWB := 1
  
  ifeq ($(ALGORITHM_G4_AWB), 1)
	      CFLAGS += -DALGORITHM_G4_AWB
  endif
  
  ifeq ($(ALGORITHM_G46_AWB), 1)
	      CFLAGS += -DALGORITHM_G4_AWB
  endif

  CFLAGS += -DSP5K_ALGORITHM_AE=1
  ALGORITHM_AE := 1

  CIQ_TXT_RESOURCE := YES
 CFLAGS += -DSP5K_PVISO100=-1
  CFLAGS += -DSP5K_CAPISO100=-1
  CFLAGS += -DSP5K_FNUMBER=48
  CFLAGS += -DSP5K_CIQ=1
  CFLAGS += -DSP5K_DIQ_GAMMA=0
  CFLAGS += -DSP5K_DIQ_WDR=0

  # DISK_NAND
	#CFLAGS += -DHW_DISK_NAND=1
	CFLAGS += -DHW_DISK_SPI=1

  
  # Face Track
  ifeq ($(HW_FACETRACK), YES)
	CFLAGS += -DHW_FACETRACK
	endif

  # DIST
	ifeq ($(HW_DIST), YES)
	CFLAGS += -DHW_DIST
	endif
 
  # Motion Detect
    ifeq ($(MOTION_DETECT), YES)
	CFLAGS += -DSP5K_MOTION_DETECT=1
	endif
	
  # GPS-SUPPORT
   GPS := 0
   ifeq ($(GPS), 1)	
   CFLAGS += -DGPS_SUPPORT=1
   #select UART0/UART1
   CFLAGS += -DGPS_USE_UART_1=1
   CFLAGS += -DGPS_USE_UART_0=0
   endif
	
	# Don't check powerkey hold on powon 1: disable check; 0: enable check
  CFLAGS += -DNOT_CHECK_POWHOLD=0
  CFLAGS += -DRTC_WAKEUP_SUPPORT=1
  
  # GYRO_SENSOR   
  #select interface(I2C/spi) in driver file
  #GSENSOR_MXC6225_XU := 1
  #GSENSOR_LIS35DE := 1
  #GSENSOR_LIS35DH := 1
  #GSENSOR_EWTS9P := 1
  #GSENSOR_BMA220 := 1
  GSENSOR_MMA8452Q := 1
  #GSENSOR_NONE := 1
  
  # IR_REMOTE-SUPPORT
  IR_REMOTE := 0
  ifeq ($(IR_REMOTE), 1)	
  CFLAGS += -DIR_KEY_SUPPORT=1
  endif
  
ifeq ($(CHIP), 5330)
  # spread spectrum 1:on 0:off
  #CFLAGS += -DSP5K_SSPLL_ON=1
  # note: if SP5K_SSPLL_ON is set to 1, the following should be set, too
  # clock divider, 0:9MHz (default), 1:6.75MHz
  #CFLAGS += -DSP5K_SSPLL_CLK_DIV=0
  # modulation clock, 0:1/8, 1:1/12, .., 7:1/36 (default), .., 14:1/64
  #CFLAGS += -DSP5K_SSPLL_MOD_CLK=7
  # modulation rate, 0:+1F, 1:+-1F, .., 4:+-4F (default), .., 15:+-15F, F=3MHz
  #CFLAGS += -DSP5K_SSPLL_MOD_RATE=4
endif
  ##########
  # multi boot
  MULTI_BOOT_CUSTOM_DEFINE := YES

  MULTI_BOOT := NO

  # host define symbols in host Makefile, named "USE_*", where "*"
  # is "MULTI_BOOT_STAGE_*" define macros in "api/inc/multiboot_api.h"
  USE_MULTI_BOOT_STAGE_PWR_GPIO   := NO
  USE_MULTI_BOOT_STAGE_VFS        := NO
  USE_MULTI_BOOT_STAGE_DEV_START  := NO
  USE_MULTI_BOOT_STAGE_DEV_RTC    := NO
  USE_MULTI_BOOT_STAGE_DEV_TEST   := NO
  USE_MULTI_BOOT_STAGE_DISK_RSV   := NO
  USE_MULTI_BOOT_STAGE_DISP       := NO
  USE_MULTI_BOOT_STAGE_SENSOR     := NO
  USE_MULTI_BOOT_STAGE_DEV_SECOND := NO
  USE_MULTI_BOOT_STAGE_DISK_MEDIA := NO
  USE_MULTI_BOOT_STAGE_DEV_AUDIO  := NO
  USE_MULTI_BOOT_STAGE_DEV_USB    := NO
  USE_MULTI_BOOT_STAGE_MEDIA      := NO
  USE_MULTI_BOOT_STAGE_MODESW     := NO
  USE_MULTI_BOOT_STAGE_SYS_RES    := NO
  USE_MULTI_BOOT_STAGE_APP_START  := NO
  USE_MULTI_BOOT_STAGE_CMD        := NO
  USE_MULTI_BOOT_STAGE_HOST       := NO
  USE_MULTI_BOOT_STAGE_APP_DELAY  := NO
  USE_MULTI_BOOT_STAGE_SLIDE      := NO
endif

ifeq ($(CHIP), $(filter $(CHIP), 5330 6330))
  # 5310 model use internal TG
  CFLAGS += -DSP5K_FRONT_MCLK_SRC_CUSTOM_DEFINE
  CFLAGS += -DSP5K_FRONT_MCLK_SRC_SP5K_TGPLL=1
ifeq ($(IQ_NAME), $(filter $(IQ_NAME), OV5653 MT9J003 OV2715 OV5610 MI5100p MT9F002))
	CFLAGS += -DVIDEO_SIZE_QVGA_DISABLE=1
endif
ifeq ($(CHIP), 6330)
	CFLAGS += -DKIT_WITH_HDMI=1
endif
# nand
  CFLAGS += -DSP5K_NAND_TIME_CUSTOM_DEFINE
  CFLAGS += -DNAND_ACT_RCV_TIME=0x23
	# spi
	#SPI_CLK (0: 24MHz, 1: 12MHz, 2: 6MHz, 3: 3MHz, 4: 1.5MHz,
	#         5: 400KHz, 6: 48MHz, 7: 96MHz, 8: 192MHz)
	#ifeq ($(CHIP), 6330)
	#CFLAGS += -DSPI_CLOCK=0
	#endif  
  #CPU_CLK (0: 135MHz, 1: 189MHz, 2: 163MHz, 3: 267MHz, 4: 243MHz,
  #         5: 297MHz, 6: 300MHz, 7: 333MHz, 8: 360MHz)
  CFLAGS += -DSP5K_CPU_CLK_CUSTOM_DEFINE
  ifeq ($(CHIP), 6330)
  CFLAGS += -DCPU_CLK=8
  else
  CFLAGS += -DCPU_CLK=4
  endif

  # SDIO interface enable
  #CFLAGS += -DSDIO_INTERFACE_ENABLE

  #force High Speed SD card running at 24Mhz (bit 2 set 1)
  #CFLAGS += -DSD_CLK_FORCE_NORMAL

  #CFLAGS += -DCalibration_ADC_KEY=1

else
# 5310 model use internal TG
	CFLAGS += -DSP5K_FRONT_MCLK_SRC_CUSTOM_DEFINE
	CFLAGS += -DSP5K_FRONT_MCLK_SRC_SP5K_TGPLL=1
	CFLAGS += -DSP5K_NAND_TIME_CUSTOM_DEFINE
	CFLAGS += -DNAND_ACT_RCV_TIME=0x21

	#CPU_CLK (1: 189MHz, 2: 162MHz, 4: 243MHz)
	CFLAGS += -DSP5K_CPU_CLK_CUSTOM_DEFINE
	CFLAGS += -DCPU_CLK=2

	# SDIO interface enable
	#CFLAGS += -DSDIO_INTERFACE_ENABLE

	#force High Speed SD card running at 24Mhz (bit 2 set 1)
	CFLAGS += -D_SDCLK_FORCE_NORMAL

endif
     CFLAGS += -D_EVB_HW_
     CFLAGS += -DVIDEO_REC_STAMP
     CFLAGS += -DVIDEO_WITH_1080P=1
     #CFLAGS += -DPOWERON_PB_WITHOUT_SENSOR=1     
     CFLAGS += -DRESOURCE_IN_RAMDISK=0

RSV_A_SIZE := 0x10E0000
RSV_B_SIZE := 0x80000
ifeq ($(CHIP), 5330)
FRM_DRAM_PRM := mdp-ddr2-128MB-135-243MHz.prm
else
ifeq ($(HW_CHIP), 6330M)
#FRM_DRAM_PRM := SPCA6330M_DDR3_1G_360MHz.prm
FRM_DRAM_PRM := SPCA6330M_DDR3_1G_360MHz_CL6-fm_standard.prm
else
FRM_DRAM_PRM := BGA_DDR3_1G_360MHz.prm
endif
endif

ifeq ($(HOST_MAKE), YES)

# project library

ifeq ($(SPHOST_LIB_SOURCE_RELEASE), NO)
PRJ_LIB += \
 $(APP_LIB_PATH)/app_calib.a\
 $(APP_LIB_PATH)/app_tb.a\
 $(APP_LIB_PATH)/app_lens.a
endif

ifeq ($(ICATWARE),NO)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/$(IQ_NAME)/lib_app_iq.a\
 $(ICATWARE_ROOT_PATH)/lib/app_icatware_common.a\
 
ifeq ($(ALGORITHM_AWB), 1)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_awbalg.a
endif
ifeq ($(ALGORITHM_G3_AWB), 1)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_awbalg.a
endif
ifeq ($(ALGORITHM_G4_AWB), 1)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_awbalg.a
endif
ifeq ($(ALGORITHM_G46_AWB), 1)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_awbalg.a
endif
ifeq ($(ALGORITHM_AE), 1)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_aealg.a
endif

PRJ_LIB += \
  $(ICATWARE_ROOT_PATH)/lib/app_diq.a

ifeq ($(MOTION_DETECT), YES)
PRJ_LIB += \
 $(ICATWARE_ROOT_PATH)/lib/app_md.a
endif

endif



# BIN DAT8 DAT16:
#	Resources shared by all project, built from resource/A & resource/B to download/A & download/B
# PRJ_BIN PRJ_DAT8 PRJ_DAT16:
#	Resources under $(RES_PRJ_PATH), build from resource/$(RES_PRJ_PATH)/A & resource/$(RES_PRJ_PATH)/B to download/A & download/B
# SHARED_BIN SHARED_DAT8 SHARED_DAT16:
#	Resources under $(RES_SHARED_PATH), build from resource/$(RES_SHARED_PATH)/A & resource/$(RES_SHARED_PATH)/B to download/A & download/B
#   If this project like to use the resources from another project, defined RES_SHARED_PATH as that project and define SHARED_XXX for those resources

ROOT := A
CATHY_BINPATH := A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)
ARD_BIN := ARD0.BIN ARD1.BIN ARD2.BIN ARD3.BIN ARD4.BIN ARD5.BIN ARD6.BIN ARD7.BIN ARD8.BIN
AHD_BIN := AHD0.BIN AHD1.BIN AHD2.BIN AHD3.BIN AHD4.BIN AHD5.BIN AHD6.BIN AHD7.BIN AHD8.BIN
HSC_BIN := HSC0.BIN HSC1.BIN HSC2.BIN HSC3.BIN HSC4.BIN HSC5.BIN HSC6.BIN HSC7.BIN HSC8.BIN
LUT3D_BIN := LT3D0.BIN LT3D1.BIN LT3D2.BIN LT3D3.BIN LT3D4.BIN LT3D5.BIN LT3D6.BIN LT3D7.BIN LT3D8.BIN
EDGE_BIN := ELT0.BIN ELT1.BIN ELT2.BIN ELT3.BIN ELT4.BIN ELT5.BIN ELT6.BIN ELT7.BIN ELT8.BIN PYEE0.BIN PYEE1.BIN PYEE2.BIN PYEE3.BIN PYEE4.BIN PYEE5.BIN PYEE6.BIN PYEE7.BIN PYEE8.BIN
AA_BIN := AHDAA.BIN AA0.BIN AA1.BIN AA2.BIN AA3.BIN AA4.BIN AA5.BIN AA6.BIN AA7.BIN AA8.BIN
GAMMA_BIN := GGGMA0.BIN GGGMA1.BIN GGGMA2.BIN GGGMA3.BIN GGGMA4.BIN GGGMA5.BIN GGGMA6.BIN GGGMA7.BIN GGGMA8.BIN RBGMA0.BIN RBGMA1.BIN RBGMA2.BIN RBGMA3.BIN RBGMA4.BIN RBGMA5.BIN RBGMA6.BIN RBGMA7.BIN RBGMA8.BIN YGAMMA.BIN YGAMMAN.BIN YGAMMAD.BIN
LENS_BIN := LDC.BIN CA.BIN FISHEYE.BIN LOMO.BIN
WDR_BIN := RGBWDR.BIN YUVWDR.BIN
CIQ_BIN := SCIQ00.BIN SCIQ01.BIN SCIQ02.BIN SCIQ03.BIN SCIQ04.BIN SCIQ05.BIN SCIQ06.BIN PCIQ00.BIN PCIQ01.BIN PCIQ02.BIN PCIQ03.BIN PCIQ04.BIN PCIQ05.BIN PCIQ06.BIN PCIQ30.BIN PCIQ31.BIN PCIQ32.BIN PCIQ33.BIN PCIQ34.BIN PCIQ35.BIN PCIQ36.BIN
#LSC_BIN := LSC.BIN PLSC.BIN LSCHD.BIN

RES_PRJ_PATH := $(PRJ_NAME)
#RES_PRJ_PATH := $(addprefix $(PRJ_NAME), $(CHIP))
RES_SHARED_PATH :=

# BIN: resources will be copied directly
BIN += \
	A/RO_RES/$(CHIP)/BPVIEW.BIN\
	A/RO_RES/$(CHIP)/BPSTILL.BIN\
	A/RO_RES/$(CHIP)/FWXDN16.BIN\
	A/RO_RES/$(CHIP)/DATSTAMP.SFN\
	A/RO_RES/$(CHIP)/BTNADC.BIN\

PRJ_BIN = \

PRJ_CIQ_BIN = \
A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/LSC.BIN\
A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/PLSC.BIN\
A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/LSCHD.BIN\
$(addprefix $(CATHY_BINPATH)/, $(ARD_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(AHD_BIN)) \
  	$(addprefix $(CATHY_BINPATH)/, $(AA_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(LUT3D_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(EDGE_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(LENS_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(WDR_BIN)) \
	$(addprefix $(CATHY_BINPATH)/, $(HSC_BIN)) \
A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/AWBFILT.BIN\
    A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/AWBCTT.BIN\
    $(addprefix $(CATHY_BINPATH)/, $(GAMMA_BIN))\
	$(addprefix $(CATHY_BINPATH)/, $(CIQ_BIN))\
A/RO_RES/IQ/$(CHIP)/$(IQ_NAME)/$(LENS_NAME)/AEALG.BIN\

	
SHARED_BIN = \
	A/RO_RES/UI/FONT/DATSTAMP.SFN\
	A/RO_RES/UI/FONT/LOGO.SFN\
	A/RO_RES/UI/ICON/TIMEBQ.SFN\
	A/RO_RES/UI/ICON/MODEICON.SFN\
	A/RO_RES/UI/ICON/WARNM.SFN\
	A/RO_RES/UI/ICON/PB.SFN\
	A/RO_RES/UI/ICON/BTNMENUOK.SFN\
	A/RO_RES/UI/ICON/MENUTAB.SFN\
	A/RO_RES/UI/ICON/CALIB_BAR.SFN\
	A/RO_RES/UI/ICON/DLGTITLL.SFN\
	A/RO_RES/UI/ICON/MU2CLBAR.SFN\
	A/RO_RES/UI/ICON/MUBODY.SFN\
	A/RO_RES/UI/ICON/MUBAR.SFN\
	A/RO_RES/UI/ICON/MUDLGBAR.SFN\
	A/RO_RES/UI/ICON/MUSUBSC.SFN\
	A/RO_RES/UI/ICON/MUSBAR.SFN\
	A/RO_RES/UI/ICON/MU2LYBAR.SFN\
	A/RO_RES/UI/ICON/MUSUSBAR.SFN\
	A/RO_RES/UI/ICON/MU2ND2.SFN\
	A/RO_RES/UI/ICON/MU2ND3.SFN\
	A/RO_RES/UI/ICON/WARN.SFN\
	A/RO_RES/UI/ICON/WARNICON.SFN\
	A/RO_RES/UI/ICON/WARNBG2.SFN\
	A/RO_RES/UI/ICON/LCM_TEST.SFN\
	A/RO_RES/UI/ICON/ICON_16X8.SFN\
	A/RO_RES/UI/JPG/BGFACE.JPG\
	A/RO_RES/UI/JPG/BGFACEHDMI.JPG\
	A/RO_RES/UI/JPG/STARTUP.JPG\
	A/RO_RES/UI/JPG/MEDION.JPG\
	A/RO_RES/WAV/BEEP.WAV\
	A/RO_RES/WAV/SHUTTER.WAV\
	A/RO_RES/WAV/WARNING.WAV\
	A/RO_RES/WAV/STARTUP1.WAV\
	A/RO_RES/WAV/POWEROFF.WAV\
	A/RO_RES/WAV/ALC.TXT
	
ifeq ($(HDMI_MENU_OPTIMIZATION),YES)
	SHARED_BIN += \
	A/RO_RES/UI/ICON/TIMEBQ_HDMI.SFN\
	A/RO_RES/UI/ICON/MODEICON_HDMI.SFN\
	A/RO_RES/UI/ICON/BTNMENUOK_HDMI.SFN\
	A/RO_RES/UI/ICON/MENUTAB_HDMI.SFN\
	A/RO_RES/UI/ICON/MUBODY_HDMI.SFN\
	A/RO_RES/UI/ICON/MUBAR_HDMI.SFN\
	A/RO_RES/UI/ICON/MUSUBSC_HDMI.SFN\
	A/RO_RES/UI/ICON/MU2LYBAR_HDMI.SFN\
	A/RO_RES/UI/ICON/MUSUSBAR_HDMI.SFN\
	A/RO_RES/UI/ICON/MU2ND2_HDMI.SFN\
	A/RO_RES/UI/ICON/MU2ND3_HDMI.SFN
endif
	
ifeq ($(HDMI_MENU_JPG),YES)
SHARED_BIN += \
	A/RO_RES/UI/JPG/ADJUST_DIALOG.JPG\
	A/RO_RES/UI/JPG/ADJUST_LEFT.JPG\
	A/RO_RES/UI/JPG/ADJUST_RIGHT.JPG\
	A/RO_RES/UI/JPG/AUDIO.JPG\
	A/RO_RES/UI/JPG/BUTTON_MENU.JPG\
	A/RO_RES/UI/JPG/BUTTON_OK.JPG\
	A/RO_RES/UI/JPG/FIVE_LINES_BAR.JPG\
	A/RO_RES/UI/JPG/FIVE_LINES_SCROLL.JPG\
	A/RO_RES/UI/JPG/FOUR_LINES_BAR.JPG\
	A/RO_RES/UI/JPG/FOUR_LINES_BODY.JPG\
	A/RO_RES/UI/JPG/FOUR_LINES_SCROLL.JPG\
	A/RO_RES/UI/JPG/MENU_BODY.JPG\
	A/RO_RES/UI/JPG/PLAYBACK.JPG\
	A/RO_RES/UI/JPG/PRINTER.JPG\
	A/RO_RES/UI/JPG/SCENE.JPG\
	A/RO_RES/UI/JPG/SETUP.JPG\
	A/RO_RES/UI/JPG/SOUND_ADJUST_1.JPG\
	A/RO_RES/UI/JPG/SOUND_ADJUST_2.JPG\
	A/RO_RES/UI/JPG/STILL.JPG\
	A/RO_RES/UI/JPG/THREE_LINES_BAR.JPG\
	A/RO_RES/UI/JPG/THREE_LINES_BODY.JPG\
	A/RO_RES/UI/JPG/TITLE.JPG\
	A/RO_RES/UI/JPG/TWO_LINES_BODY.JPG\
	A/RO_RES/UI/JPG/VIDEO.JPG
endif	
# DAT8: resources will be converted by t2b -b 1
DAT8 += \
	A/RO_RES/CALIB/CALIB.DAT\
	B/USER_RES/USER_SET.DAT\
	B/USER_RES/UIPMODE.DAT\
	B/USER_RES/UIAMODE.DAT\
	B/USER_RES/UISMODE.DAT\
	B/USER_RES/UIMMODE.DAT\
	B/USER_RES/UISCEN1.DAT\
	B/USER_RES/UISCEN2.DAT\
	B/USER_RES/UISMILE.DAT\
	B/USER_RES/UIQMODE.DAT\
	B/USER_RES/UIVIDEO.DAT\
	B/USER_RES/UDF.DAT\
	B/USER_RES/ADF.DAT

PRJ_DAT8 +=\
	A/RO_RES/DISP/DISPGAMA.DAT\
	A/RO_RES/DISP/DISPMAX.DAT\
	A/RO_RES/DISP/DISPGAM0.DAT\
	A/RO_RES/DISP/DISPMAX0.DAT

SHARED_DAT8 =

# DAT16: resources will be converted by t2b -b 2
DAT16 +=\
	A/RO_RES/CALIB/BATTERY.DAT\
	A/RO_RES/CALIB/CALIBAF.DAT

PRJ_DAT16 =

SHARED_DAT16 =

APPUI_FIF_BIN= \
	USER_SET.BIN\
	UIPMODE.BIN\
	UIAMODE.BIN\
	UISMODE.BIN\
	UIMMODE.BIN\
	UISCEN1.BIN\
	UISCEN2.BIN\
	UISMILE.BIN\
	UIQMODE.BIN\
	UIVIDEO.BIN

APPUI_COLD_BIN= \
	BATTERY.BIN \
	CALIB.BIN\
	CALIBAF.BIN

APPUI_WAV_BIN =\
	 BEEP.WAV\
	 WARNING.WAV\
	 SHUTTER.WAV

APPIQ_FIF_BIN=\
	$(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(AA_BIN)) \
	$(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(HSC_BIN)) \
	$(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(ARD_BIN)) \
	$(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(AHD_BIN)) \
	$(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(LUT3D_BIN)) \
    $(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(GAMMA_BIN)) \
    $(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(EDGE_BIN)) \
    $(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(WDR_BIN))


LENSIQ_FIF_BIN = \
    $(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(LENS_BIN))

CIQ_FIF_BIN = \
    $(addprefix $(IQ_NAME)/$(LENS_NAME)/, $(CIQ_BIN))

endif # HOST_MAKE
