/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/
/*******************************************************************************
 *
 * Filename:
 * ---------
 * Bt_message.h
 *
 * Project:
 * --------
 *   BT Project
 *
 * Description:
 * ------------
 *   This file is used to
 *
 * Author:
 * -------
 * Dlight Ting
 *
 *==============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * $Revision: 
 * $Modtime:
 * $Log: 
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *==============================================================================
 *******************************************************************************/
#ifndef __BT_MESSAGE_H__
#define __BT_MESSAGE_H__

typedef enum
{
    MSG_ID_BT_START = 0,
    MSG_ID_BT_RANGE = 100,
    
    /* GAP */
    MSG_ID_BT_GAP_GROUP_START = (MSG_ID_BT_START + MSG_ID_BT_RANGE),
    MSG_ID_BT_GAP_GROUP_RANGE = 100,

    /* SDP */
    MSG_ID_BT_SDP_GROUP_START = (MSG_ID_BT_GAP_GROUP_START + MSG_ID_BT_GAP_GROUP_RANGE),
    MSG_ID_BT_SDP_GROUP_RANGE = 100,

    /* A2DP */
    MSG_ID_BT_A2DP_GROUP_START = (MSG_ID_BT_SDP_GROUP_START + MSG_ID_BT_SDP_GROUP_RANGE),
    MSG_ID_BT_A2DP_GROUP_RANGE = 100,

    /* AVRCP */
    MSG_ID_BT_AVRCP_GROUP_START = (MSG_ID_BT_A2DP_GROUP_START + MSG_ID_BT_A2DP_GROUP_RANGE),
    MSG_ID_BT_AVRCP_GROUP_RANGE = 200,

    /* BIPI */
    MSG_ID_BT_BIPI_GROUP_START = (MSG_ID_BT_AVRCP_GROUP_START + MSG_ID_BT_AVRCP_GROUP_RANGE),
    MSG_ID_BT_BIPI_GROUP_RANGE = 100,
    
    /* BIPIR */
    MSG_ID_BT_BIPR_GROUP_START = (MSG_ID_BT_BIPI_GROUP_START + MSG_ID_BT_BIPI_GROUP_RANGE),
    MSG_ID_BT_BIPR_GROUP_RANGE = 100,

    /* BPP */
    MSG_ID_BT_BPP_GROUP_START = (MSG_ID_BT_BIPR_GROUP_START + MSG_ID_BT_BIPR_GROUP_RANGE),
    MSG_ID_BT_BPP_GROUP_RANGE = 100,

    /* FTPC */
    MSG_ID_BT_FTPC_GROUP_START = (MSG_ID_BT_BPP_GROUP_START + MSG_ID_BT_BPP_GROUP_RANGE),
    MSG_ID_BT_FTPC_GROUP_RANGE = 100,

    /* FTPS */
    MSG_ID_BT_FTPS_GROUP_START = (MSG_ID_BT_FTPC_GROUP_START + MSG_ID_BT_FTPC_GROUP_RANGE),
    MSG_ID_BT_FTPS_GROUP_RANGE = 100,

    /* GOEPC */
    MSG_ID_BT_GOEPC_GROUP_START = (MSG_ID_BT_FTPS_GROUP_START + MSG_ID_BT_FTPS_GROUP_RANGE),
    MSG_ID_BT_GOEPC_GROUP_RANGE = 100,

    /* GOEPS */
    MSG_ID_BT_GOEPS_GROUP_START = (MSG_ID_BT_GOEPC_GROUP_START + MSG_ID_BT_GOEPC_GROUP_RANGE),
    MSG_ID_BT_GOEPS_GROUP_RANGE = 100,

    /* HFG */
    MSG_ID_BT_HFG_GROUP_START = (MSG_ID_BT_GOEPS_GROUP_START + MSG_ID_BT_GOEPS_GROUP_RANGE),
    MSG_ID_BT_HFG_GROUP_RANGE = 300,

    /* HID */
    MSG_ID_BT_HID_GROUP_START = (MSG_ID_BT_HFG_GROUP_START + MSG_ID_BT_HFG_GROUP_RANGE),
    MSG_ID_BT_HID_GROUP_RANGE = 100,

    /* OPPC */
    MSG_ID_BT_OPPC_GROUP_START = (MSG_ID_BT_HID_GROUP_START + MSG_ID_BT_HID_GROUP_RANGE),
    MSG_ID_BT_OPPC_GROUP_RANGE = 100,

    /* OPPS */
    MSG_ID_BT_OPPS_GROUP_START = (MSG_ID_BT_OPPC_GROUP_START + MSG_ID_BT_OPPC_GROUP_RANGE),
    MSG_ID_BT_OPPS_GROUP_RANGE = 100,

    /* PBAP */
    MSG_ID_BT_PBAP_GROUP_START = (MSG_ID_BT_OPPS_GROUP_START + MSG_ID_BT_OPPS_GROUP_RANGE),
    MSG_ID_BT_PBAP_GROUP_RANGE = 100,

    /* SIMAP */
    MSG_ID_BT_SIMAP_GROUP_START = (MSG_ID_BT_PBAP_GROUP_START + MSG_ID_BT_PBAP_GROUP_RANGE),
    MSG_ID_BT_SIMAP_GROUP_RANGE = 100,

    /* SPP */
    MSG_ID_BT_SPP_GROUP_START = (MSG_ID_BT_SIMAP_GROUP_START + MSG_ID_BT_SIMAP_GROUP_RANGE),
    MSG_ID_BT_SPP_GROUP_RANGE = 100,

    /* JSR82 */
    MSG_ID_BT_JSR82_GROUP_START = (MSG_ID_BT_SPP_GROUP_START + MSG_ID_BT_SPP_GROUP_RANGE),
    MSG_ID_BT_JSR82_GROUP_RANGE = 100,

    /* CHN */
    MSG_ID_BT_CHN_GROUP_START = (MSG_ID_BT_JSR82_GROUP_START + MSG_ID_BT_JSR82_GROUP_RANGE),
    MSG_ID_BT_CHN_GROUP_RANGE = 100,

    /* MAP */
    MSG_ID_BT_MAP_GROUP_START = (MSG_ID_BT_CHN_GROUP_START + MSG_ID_BT_CHN_GROUP_RANGE),
    MSG_ID_BT_MAP_GROUP_RANGE = 100,

    /* VDP */
    MSG_ID_BT_VDP_GROUP_START = (MSG_ID_BT_MAP_GROUP_START + MSG_ID_BT_MAP_GROUP_RANGE),
    MSG_ID_BT_VDP_GROUP_RANGE = 100,

    CUSTOM_MSG_ID_BEGIN = (MSG_ID_BT_VDP_GROUP_START + MSG_ID_BT_VDP_GROUP_RANGE + 1000),
} MSG_ID_CODE_BEGIN;

typedef enum
{
  #include "bluetooth_sap.h"   
} msg_type;

#endif
