/**************************************************************************
 *                                                                        *
 *         Copyright (c) 2005 by Sunplus Technology Co., Ltd.             *
 *                                                                        *
 *  This software is copyrighted by and is the property of Sunplus        *
 *  Technology Co., Ltd. All rights are reserved by Sunplus Technology    *
 *  Co., Ltd. This software may only be used in accordance with the       *
 *  corresponding license agreement. Any unauthorized use, duplication,   *
 *  distribution, or disclosure of this software is expressly forbidden.  *
 *                                                                        *
 *  This Copyright notice MUST not be removed or modified without prior   *
 *  written consent of Sunplus Technology Co., Ltd.                       *
 *                                                                        *
 *  Sunplus Technology Co., Ltd. reserves the right to modify this        *
 *  software without notice.                                              *
 *                                                                        *
 *  Sunplus Technology Co., Ltd.                                          *
 *  19, Innovation First Road, Science-Based Industrial Park,             *
 *  Hsin-Chu, Taiwan, R.O.C.                                              *
 *                                                                        *
 *  Author: Anthony Yu                                                    *
 *                                                                        *
 **************************************************************************/
/* DO NOT EDIT the next 2 lines for auto revision by subversion
$Rev$
$Date::                     $
 */

#ifndef _CDSP_DEF_H_
#define _CDSP_DEF_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "common.h"

/**************************************************************************
 *                           C O N S T A N T S                            *
 **************************************************************************/

/* YUV alignment */
#if SPCA5330
#define YUV_ALIGN_SIZE	256
#else
#define YUV_ALIGN_SIZE	16
#endif

#if SPCA6330
#define CDSP_SENSOR_X_SIZE_INCREMENT_FOR_MODE_9_PV_BP 6
#else
#define CDSP_SENSOR_X_SIZE_INCREMENT_FOR_MODE_9_PV_BP 0
#endif

/*for sp5kSystemCfgSet/Get(SP5K_CDSP_INFO_CFG_GROUP,sel,...)*/
typedef enum {
	CDSP_INFO_CFG_WB_GAIN_ONE,
	CDSP_INFO_CFG_AEWIN_VAL_WIDTH,
	CDSP_INFO_CFG_AWB_VAL_WIDTH,
	CDSP_INFO_CFG_OB_VAL_WIDTH,
	CDSP_INFO_CFG_WB_OFF_WIDTH,
	CDSP_INFO_CFG_WB_GAIN_BLOCK_PATH,
	CDSP_INFO_CFG_Y_CONTRAST_ONE,
	CDSP_INFO_CFG_TOTAL,
} cdspInfoCfg_t;

/*for sp5kSystemCfgSet/Get(SP5K_CDSP_FLIP_CFG,flip)*/
/*for sp5kSystemCfgSet/Get(SP5K_CDSP_AEAF_SW_FLIP_CFG,sel,flip)*/
/*defines for param sel*/
typedef enum {
	CDSP_AA_SW_FLIP_CFG_ALL,
	CDSP_AA_SW_FLIP_CFG_AEWIN,
	CDSP_AA_SW_FLIP_CFG_AFWIN,
	CDSP_AA_SW_FLIP_CFG_TOTAL,
} cdspAaSwFlipSel_t;
/*defines for param flip*/
typedef enum {
	CDSP_FLIP_VAL_NOFLIP = 0,
	CDSP_FLIP_VAL_HFLIP = 0x01,
	CDSP_FLIP_VAL_VFLIP = 0x02,
	CDSP_FLIP_VAL_BOTHFLIP = 0x03,
	CDSP_FLIP_VAL_TOTAL,
} cdspFlipVal_t;

typedef enum {
	CDSP_SYS_CFG_MODE_PARAM,	/* obsolete from 5310 to simplify code: alloc mode-specific param buffer */
	CDSP_SYS_CFG_GLOBALGAIN_LOCK_RBCLAMP,
	CDSP_SYS_CFG_CDSP_PHASE_SCAN,
	CDSP_SYS_CFG_CDSP_PAHSE_SCAN=CDSP_SYS_CFG_CDSP_PHASE_SCAN, /* compatible to prev typo */
	CDSP_SYS_CFG_WBGAIN2_ENABLE_GLOBALGAIN_CTRL,
	CDSP_SYS_CFG_TD_MV_ENABLE,
	CDSP_SYS_CFG_TOTAL,
} cdspSysCfg_t;

typedef enum {
	CDSP_MODE_PREVIEW,		/* for param & op */
	CDSP_MODE_STILL_SNAP,	/* for param & op */
	CDSP_MODE_STILL_PLAYBACK,	/* for cdsp YUV redo param & op */
	CDSP_MODE_VIDEO_RECORD,	/* for param & op */
	CDSP_MODE_TOTAL,
	CDSP_MODE_OTHER = CDSP_MODE_TOTAL	/* for op only */
} cdspMode_t;

typedef enum {
	IQ_CFG_REDO_POS_AFTER = 0,
	IQ_CFG_REDO_POS_BEFORE,
} cdspIqCfgRedoPosition_t;

typedef enum {
	IQ_CFG_WB_POS_BEFORE_INTERPOLATION = 0,
	IQ_CFG_WB_POS_BEFORE_LSC,
} cdspIqCfgWbGainPosition_t;

enum cdspArraySize_e {
	IQ_PARAM_SIZE_HUE		= 4,
	IQ_PARAM_SIZE_INTPL		= 8,
	IQ_PARAM_SIZE_CM		= 18,
	IQ_PARAM_SIZE_EDGE_FLT	= 12,
	IQ_PARAM_SIZE_EDGE_GAIN	= 16,
	IQ_PARAM_SIZE_WB_OFS	= 8,
	IQ_PARAM_SIZE_WB_GAIN	= 8,
	IQ_PARAM_SIZE_LPF		= 17,
};

typedef enum cdspIqBlocklSelector_e {
	IQ_BLK_SMEAR_REDUCTION	= 0,
	IQ_BLK_OB,
	IQ_BLK_WB_OFS,
	IQ_BLK_BP,
	IQ_BLK_LSC,

	IQ_BLK_ARD,
	IQ_BLK_ARD_DN_Y_THR,
	IQ_BLK_CA,
	IQ_BLK_DEPEAK_R,
	IQ_BLK_DEPEAK_G,
	IQ_BLK_DEPEAK_B,
	IQ_BLK_WB_GAIN,
	IQ_BLK_GLOBAL_GAIN,

	IQ_BLK_RGB_DENOISE_R,
	IQ_BLK_RGB_DENOISE_G,
	IQ_BLK_RGB_DENOISE_B,
	IQ_BLK_WHITE_CLIP1,
	IQ_BLK_DARK_CLIP1,
	IQ_BLK_WDR,
	IQ_BLK_CM,
	IQ_BLK_RGB_GAMMA,
#if SPCA6330
	IQ_BLK_CM2,
#endif
	IQ_BLK_3D_LUT,
	IQ_BLK_WHITE_CLIP2,
	IQ_BLK_DARK_CLIP2,

	IQ_BLK_APPLY_POST_AHD,

	IQ_BLK_HUE = IQ_BLK_APPLY_POST_AHD,
	IQ_BLK_Y_GAMMA,
	IQ_BLK_AA,
	IQ_BLK_YEF,
	IQ_BLK_YNF,
	IQ_BLK_Y_EDGE,
	IQ_BLK_Y_CORNER_EDGE,
	IQ_BLK_UV_LPF_EDGE,
	IQ_BLK_UV_LPF_AREA,
	IQ_BLK_YBYC,
	IQ_BLK_SKETCH,
	IQ_BLK_Y_THR,
	IQ_BLK_UV_SAT_HUE,

	IQ_BLK_APPLY_POST_AHD_END,

	IQ_BLK_AHD = IQ_BLK_APPLY_POST_AHD_END,
	IQ_BLK_AHD_DWT,

	/* ext block */
	IQ_BLK_TEMPORAL_DN,
	IQ_BLK_LDC,

	IQ_BLK_APPLY_BY_MODE_SWITCH, /* above will be applied when modeSetDone and modeFlush */

	IQ_BLK_APPLY_PRE_AHD = IQ_BLK_APPLY_BY_MODE_SWITCH,

	IQ_BLK_PRE_AHD_HUE = IQ_BLK_APPLY_PRE_AHD,
	IQ_BLK_PRE_AHD_Y_GAMMA,
	IQ_BLK_PRE_AHD_AA,
	IQ_BLK_PRE_AHD_YEF,
	IQ_BLK_PRE_AHD_YNF,
	IQ_BLK_PRE_AHD_Y_EDGE,
	IQ_BLK_PRE_AHD_Y_CORNER_EDGE,
	IQ_BLK_PRE_AHD_UV_LPF_EDGE,
	IQ_BLK_PRE_AHD_UV_LPF_AREA,
	IQ_BLK_PRE_AHD_YBYC,

	IQ_BLK_PRE_AHD_SKETCH,

	IQ_BLK_PRE_AHD_Y_THR,
	IQ_BLK_PRE_AHD_UV_SAT_HUE,

	IQ_BLK_APPLY_PRE_AHD_END,

	IQ_BLK_APPLY_AHD = IQ_BLK_APPLY_PRE_AHD_END,

	IQ_BLK_AHD_AA = IQ_BLK_APPLY_AHD,
	IQ_BLK_AHD_UV_LPF_EDGE,
	IQ_BLK_AHD_UV_LPF_AREA,

	IQ_BLK_AHD_DN_Y_THR,

	IQ_BLK_APPLY_AHD_END,

	/* REDO */
	IQ_BLK_APPLY_REDO = IQ_BLK_APPLY_AHD_END,

	IQ_BLK_REDO_HUE = IQ_BLK_APPLY_REDO,
	IQ_BLK_REDO_Y_GAMMA,
	IQ_BLK_REDO_AA,
	IQ_BLK_REDO_YEF,
	IQ_BLK_REDO_YNF,
	IQ_BLK_REDO_Y_EDGE,
	IQ_BLK_REDO_Y_CORNER_EDGE,
	IQ_BLK_REDO_UV_LPF_EDGE,
	IQ_BLK_REDO_UV_LPF_AREA,
	IQ_BLK_REDO_YBYC,

	IQ_BLK_REDO_SKETCH,

	IQ_BLK_REDO_Y_THR,
	IQ_BLK_REDO_UV_SAT_HUE,

	IQ_BLK_APPLY_REDO_END,

	IQ_BLK_MAX = IQ_BLK_APPLY_REDO_END,
} cdspIqBlocklSelector_t;

/*
 * |<-           32 bits            ->|
 * +------------+-------+-------------+
 * |   common   | Block |  mask bits  |
 * +------------+-------+-------------+
 * |<-   12   ->|<- 7 ->|<-    13   ->|
 */

#define IQ_CFG_TOTAL_BIT				32

#define IQ_CFG_COMMON_HEADER_MASK_BIT	12
#define IQ_CFG_HEADER_MASK_BIT			7
#define IQ_CFG_MASK_BIT				( IQ_CFG_TOTAL_BIT - IQ_CFG_COMMON_HEADER_MASK_BIT - IQ_CFG_HEADER_MASK_BIT )

#define IQ_CFG_COMMON_HEADER			0x000
#define IQ_CFG_HEADER_SET( com, block )	( ( com << ( IQ_CFG_TOTAL_BIT - IQ_CFG_COMMON_HEADER_MASK_BIT ) ) \
													+ ( block << IQ_CFG_MASK_BIT ) )

#define IQ_CFG_COMMON_HEADER_GET( x )	( (x) >> ( IQ_CFG_TOTAL_BIT - IQ_CFG_COMMON_HEADER_MASK_BIT ) )
#define IQ_CFG_HEADER_GET( x )			( ( (x) << IQ_CFG_COMMON_HEADER_MASK_BIT ) >> ( IQ_CFG_TOTAL_BIT - IQ_CFG_HEADER_MASK_BIT ) )
#define IQ_CFG_IDX_GET( x )				( (x) & ((1 << IQ_CFG_MASK_BIT) - 1) )

/*****
	1: 8 * UINT8		INTPL
	2: 9 * UINT16	CM
	3: 6 * UINT16	Y EDGE FILTER
	4: 16 * UINT8	Y EDGE GAIN
	5: 4 * UINT8		UV SAT HUE
*/

typedef enum cdspIqCfgHeader_e {
	/* pre raw block */
	IQ_CFG_SMEAR_HEADER				= 0x00,
	IQ_CFG_DARK_SUB_HEADER,
	IQ_CFG_OB_HEADER,
	IQ_CFG_WB_OFS_HEADER,
	IQ_CFG_LSC_HEADER,

	/* raw block */
	IQ_CFG_ARD_HEADER,
	IQ_CFG_CA_HEADER,
	IQ_CFG_DEPEAK_HEADER,
	IQ_CFG_WB_GAIN_HEADER,
	IQ_CFG_INTPL_HEADER,

	/* rgb block */
	IQ_CFG_RGB_DENOISE_HEADER,
	IQ_CFG_CLIP_HEADER,
	IQ_CFG_WDR_HEADER,
	IQ_CFG_CM_HEADER,
	IQ_CFG_RGB_GAMMA_HEADER,
#if SPCA6330
	IQ_CFG_CM2_HEADER,
#endif

	IQ_CFG_HEADER_FLUSH_POST_AHD,

	/* yuv block */
	IQ_CFG_HUE_HEADER = IQ_CFG_HEADER_FLUSH_POST_AHD,
	IQ_CFG_AA_HEADER,
	IQ_CFG_YEF_YNF_HEADER,
	IQ_CFG_Y_EDGE_HEADER,
	IQ_CFG_Y_CORNER_EDGE_HEADER,
	IQ_CFG_UV_LPF_HEADER,
	IQ_CFG_DIGITAL_EFFECT_HEADER,

	IQ_CFG_HEADER_FLUSH_POST_AHD_END,

	IQ_CFG_AHD_HEADER = IQ_CFG_HEADER_FLUSH_POST_AHD_END,
	IQ_CFG_HDR_HEADER,

	IQ_CFG_TEMPORAL_DENOISE_HEADER,
	IQ_CFG_LDC_HEADER,

	/* MISC */
	IQ_CFG_MISC_HEADER,

	IQ_CFG_HEADER_FLUSH_BY_MODE_SWITCH,

	IQ_CFG_HEADER_FLUSH_PRE_AHD = IQ_CFG_HEADER_FLUSH_BY_MODE_SWITCH,

	IQ_CFG_PRE_AHD_HUE_HEADER = IQ_CFG_HEADER_FLUSH_PRE_AHD,
	IQ_CFG_PRE_AHD_AA_HEADER,
	IQ_CFG_PRE_AHD_YEF_YNF_HEADER,
	IQ_CFG_PRE_AHD_Y_EDGE_HEADER,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_HEADER,
	IQ_CFG_PRE_AHD_UV_LPF_HEADER,
	IQ_CFG_PRE_AHD_DIGITAL_EFFECT_HEADER,
	
	IQ_CFG_HEADER_FLUSH_PRE_AHD_END,

	IQ_CFG_HEADER_FLUSH_AHD = IQ_CFG_HEADER_FLUSH_PRE_AHD_END,

	IQ_CFG_AHD_AA_HEADER = IQ_CFG_HEADER_FLUSH_AHD,
	IQ_CFG_AHD_UV_LPF_HEADER,

	IQ_CFG_HEADER_FLUSH_AHD_END,

	IQ_CFG_HEADER_FLUSH_REDO = IQ_CFG_HEADER_FLUSH_AHD_END,

	IQ_CFG_REDO_HUE_HEADER = IQ_CFG_HEADER_FLUSH_REDO,
	IQ_CFG_REDO_AA_HEADER,
	IQ_CFG_REDO_YEF_YNF_HEADER,
	IQ_CFG_REDO_Y_EDGE_HEADER,
	IQ_CFG_REDO_Y_CORNER_EDGE_HEADER,
	IQ_CFG_REDO_UV_LPF_HEADER,
	IQ_CFG_REDO_DIGITAL_EFFECT_HEADER,

	IQ_CFG_HEADER_FLUSH_REDO_END,

	IQ_CFG_HEADER_MAX = IQ_CFG_HEADER_FLUSH_REDO_END
} cdspIqCfgHeader_t;


typedef enum cdspIqCfgSelector_e {
	/* smear */
	IQ_CFG_SMEAR_MODE					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_SMEAR_HEADER ) + 0x00, 		/* 0x20c4 */
	IQ_CFG_SMEAR_DUMMY_START,
	IQ_CFG_SMEAR_DUMMY_END, 			/* 0x20c6 */
	IQ_CFG_SMEAR_DIV,

	IQ_CFG_SMEAR_OB_OFFSET, 			/*offset for ob value */

	IQ_CFG_SMEAR_R_GAIN,
	IQ_CFG_SMEAR_GR_GAIN,
	IQ_CFG_SMEAR_B_GAIN,
	IQ_CFG_SMEAR_GB_GAIN,

	IQ_CFG_SMEAR_GAIN_RATIO,
	IQ_CFG_SMEAR_GAIN_THR,

	IQ_CFG_SMEAR_HIGH_THR,				/* 0x23e8 */
	IQ_CFG_SMEAR_LOW_THR,				/* 0x23ea */

	IQ_CFG_SMEAR_MAX,

	/* dark sub */
	IQ_CFG_DARK_SUB_HIGH_THR			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_DARK_SUB_HEADER ) + 0x00, 		/* 0x215c */
	IQ_CFG_DARK_SUB_LOW_THR, 			/* 0x215e */

	IQ_CFG_DARK_SUB_MAX,

	/* ob */
	IQ_CFG_OB_MODE						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_OB_HEADER ) + 0x00, 				/* 0x220c */
	IQ_CFG_OB_WIN_X_OFFSET,			/* 0x2210 */
	IQ_CFG_OB_WIN_Y_OFFSET,			/* 0x2212 */
	IQ_CFG_OB_WIN_X_SIZE,				/* 0x220d */
	IQ_CFG_OB_WIN_Y_SIZE,				/* 0x220e */

	IQ_CFG_OB_R_VAL,					/* 0x2214 */
	IQ_CFG_OB_GR_VAL,					/* 0x2216 */
	IQ_CFG_OB_B_VAL,					/* 0x2218 */
	IQ_CFG_OB_GB_VAL,					/* 0x221a */

	IQ_CFG_OB_MANUAL_VAL,

	IQ_CFG_OB_MAX,

	/* wb offset */
	IQ_CFG_WB_OFS_R					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_WB_OFS_HEADER ) + 0x00,			/* 0x2222 */
	IQ_CFG_WB_OFS_GR,					/* 0x2224 */
	IQ_CFG_WB_OFS_B,					/* 0x2226 */
	IQ_CFG_WB_OFS_GB,					/* 0x2228 */
	IQ_CFG_WB_OFS_ARRAY,

	IQ_CFG_WB_OFS_MAX,

	/* lsc */
	IQ_CFG_LSC_GAIN					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_LSC_HEADER ) + 0x00,
	IQ_CFG_LSC_BASIC_CHANNEL,
	IQ_CFG_LSC_ONE_LUT,

	IQ_CFG_LSC_STEP_INTERNAL,
	IQ_CFG_LSC_BIT_MODE_INTERNAL,
	IQ_CFG_LSC_TBL_X_SIZE_INTERNAL,
	IQ_CFG_LSC_TBL_Y_SIZE_INTERNAL,

	IQ_CFG_LSC_CHANNEL_MODE_INTERNAL,

	IQ_CFG_LSC_MAX,

	/* ard */
	IQ_CFG_ARD_MODE					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_ARD_HEADER ) + 0x00,		/* 2280 */
	IQ_CFG_ARD_MIRROR,				/* 2280 */
	IQ_CFG_ARD_BLUR_MASK_G,			/* 0x2282[0:1] */
	IQ_CFG_ARD_BLUR_MASK_RB,			/* 0x2282[2] */
	IQ_CFG_ARD_HIGH_VAR_MASK_G,		/* 0x2282[4:5] */

	IQ_CFG_ARD_SHRINK_ENABLE,			/*	0x2283[0] */
	IQ_CFG_ARD_SHRINK_SHIFT,			/*	0x2283[4:6] */

	IQ_CFG_ARD_SPK_OPT2_G,				/* 0x2181[4] */
	IQ_CFG_ARD_SPK_OPT3_G,				/* 0x2181[5] */
	IQ_CFG_ARD_SPK_OPT2_RB,			/* 0x2181[6] */
	IQ_CFG_ARD_SPK_OPT3_RB,			/* 0x2181[7] */

	IQ_CFG_ARD_VAR_SCALE_R,			/* 0x2188 */
	IQ_CFG_ARD_VAR_SCALE_G,			/* 0x2189 */
	IQ_CFG_ARD_VAR_SCALE_B,			/* 0x218A */

	IQ_CFG_ARD_LOW_THR_R,				/* 0x21c2[0:3], 0x218c */
	IQ_CFG_ARD_LOW_THR_G,				/* 0x21c2[4:7], 0x218d */
	IQ_CFG_ARD_LOW_THR_B,				/* 0x21c3[0:3], 0x218e */

	IQ_CFG_ARD_HIGH_THR_R0,				/* 0x21c4 */
	IQ_CFG_ARD_HIGH_THR_G0,				/* 0x21c6 */
	IQ_CFG_ARD_HIGH_THR_B0,				/* 0x21c8 */

	IQ_CFG_ARD_HIGH_THR_R1,				/* 0x21ca */
	IQ_CFG_ARD_HIGH_THR_G1,				/* 0x21cc */
	IQ_CFG_ARD_HIGH_THR_B1,				/* 0x21ce */

	IQ_CFG_ARD_CONTRAST_GAIN_R,		/* 0x2190 */
	IQ_CFG_ARD_CONTRAST_GAIN_G,		/* 0x2191 */
	IQ_CFG_ARD_CONTRAST_GAIN_B,		/* 0x2192 */

	IQ_CFG_ARD_DN_Y_THR_CTR,		/* 5330:0x20a1[4:7] , 6330:0x2732 */
	IQ_CFG_ARD_DN_Y_POS_THR,		/* 5330:0x20a4~0x20a5, 6330:0x2736~0x2737 */
	IQ_CFG_ARD_DN_Y_NEG_THR,		/* 5330:0x20a2~0x20a3, 6330:0x2734~0x2735 */

#if SPCA6330
	IQ_CFG_ARD_DN_UV_THR_CTR,		/* 0x273a */
	IQ_CFG_ARD_DN_UV_POS_THR,		/* 0x273e~0x273f */
	IQ_CFG_ARD_DN_UV_NEG_THR,		/* 0x273c~0x273d */
#endif

	IQ_CFG_ARD_MAX,

	/* ca */
	IQ_CFG_CA_R_X_GAIN				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_CA_HEADER ) + 0x00,
	IQ_CFG_CA_R_Y_GAIN,
	IQ_CFG_CA_B_X_GAIN,
	IQ_CFG_CA_B_Y_GAIN,

	IQ_CFG_CA_MODE_INTERNAL,
	IQ_CFG_CA_STEP_INTERNAL,
	IQ_CFG_CA_X_OFFSET_INTERNAL,
	IQ_CFG_CA_Y_OFFSET_INTERNAL,
	IQ_CFG_CA_X_SIZE_INTERNAL,
	IQ_CFG_CA_Y_SIZE_INTERNAL,

	IQ_CFG_CA_MAX,

	/* depeak */
	IQ_CFG_DEPEAK_R_POS_THR			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_DEPEAK_HEADER ) + 0x00,		/* 0x2324 */
	IQ_CFG_DEPEAK_R_NEG_THR,			/* 0x2326 */
	IQ_CFG_DEPEAK_R_PIXEL_CNT,			/* 0x232f */

	IQ_CFG_DEPEAK_G_POS_THR,			/* 0x2318 */
	IQ_CFG_DEPEAK_G_NEG_THR,			/* 0x231a */
	IQ_CFG_DEPEAK_G_PIXEL_CNT,			/* 0x2323 */

	IQ_CFG_DEPEAK_B_POS_THR,			/* 0x2364 */
	IQ_CFG_DEPEAK_B_NEG_THR,			/* 0x2366 */
	IQ_CFG_DEPEAK_B_PIXEL_CNT,			/* 0x236f */

	IQ_CFG_DEPEAK_R_BAD_THR,			/* 0x2328 */
	IQ_CFG_DEPEAK_R_SHRINK_THR,		/* 0x232a */
	IQ_CFG_DEPEAK_R_CLOSE_THR,			/* 0x232c */
	IQ_CFG_DEPEAK_R_SLOPE,				/* 0x232e */

	IQ_CFG_DEPEAK_G_BAD_THR,			/* 0x231c */
	IQ_CFG_DEPEAK_G_SHRINK_THR,		/* 0x231e */
	IQ_CFG_DEPEAK_G_CLOSE_THR,			/* 0x2320 */
	IQ_CFG_DEPEAK_G_SLOPE,				/* 0x2322 */

	IQ_CFG_DEPEAK_B_BAD_THR,			/* 0x2368 */
	IQ_CFG_DEPEAK_B_SHRINK_THR,		/* 0x236a */
	IQ_CFG_DEPEAK_B_CLOSE_THR,			/* 0x236c */
	IQ_CFG_DEPEAK_B_SLOPE,				/* 0x236e */

	IQ_CFG_DEPEAK_MAX,

	/* wb gain */
	IQ_CFG_WB_GAIN_R_GAIN				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_WB_GAIN_HEADER ) + 0x00,				/* 0x2292, 0x22f2 */
	IQ_CFG_WB_GAIN_GR_GAIN,			/* 0x2294, 0x22f4 */
	IQ_CFG_WB_GAIN_B_GAIN,				/* 0x2296, 0x22f6 */
	IQ_CFG_WB_GAIN_GB_GAIN,			/* 0x2298, 0x22f8 */
	IQ_CFG_WB_GAIN_ARRAY,

	IQ_CFG_WB_GAIN_GLOBAL_GAIN,

	IQ_CFG_WB_GAIN_POS,

	IQ_CFG_WB_GAIN_MAX,

	/* interpolation */
	IQ_CFG_INTPL_LOW_THR				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_INTPL_HEADER ) + 0x00,			/* 0x22a0 */
	IQ_CFG_INTPL_EDGE_THR,				/* 0x22a2 */
	IQ_CFG_INTPL_SLANT_THR,			/* 0x22a6 */
	IQ_CFG_INTPL_HF_THR,				/* 0x22a8 */

	IQ_CFG_INTPL_MODE,					/* 0x22a4[0] */

	IQ_CFG_INTPL_GRAD_OPT,				/* 0x22a4[1] */
	IQ_CFG_INTPL_CLIP_OPT,				/* 0x22a4[2] */

	IQ_CFG_INTPL_LAC_THR,				/* 0x229c */
	IQ_CFG_INTPL_LSO_THR,				/* 0x229e */
	IQ_CFG_INTPL_LAC_CNT_THR,			/* 0x22a5 */

	IQ_CFG_INTPL_LAC_DIV,				/* 0x22aa */
	IQ_CFG_INTPL_LAC_SHR,				/* 0x22ab */
	IQ_CFG_INTPL_LAC_EDGE_THR,			/* 0x22ac */
	IQ_CFG_INTPL_LAC_PAT_THR,			/* 0x22ae */

	IQ_CFG_INTPL_LAC_ARRAY,			/* 0x2350 */
	IQ_CFG_INTPL_LSO_ARRAY				= IQ_CFG_INTPL_LAC_ARRAY + (IQ_PARAM_SIZE_INTPL+3)/4,		/* 0x2358 */

	IQ_CFG_INTPL_MAX					= IQ_CFG_INTPL_LSO_ARRAY + (IQ_PARAM_SIZE_INTPL+3)/4,

	/* rgb denoise */
	IQ_CFG_RGB_DENOISE_WEIGHT			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_RGB_DENOISE_HEADER ) + 0x00,		/* 0x2358 */

	IQ_CFG_RGB_DENOISE_MAX,

	/* white/dark clip */
	IQ_CFG_CLIP1_WHITE_CH				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_CLIP_HEADER ) + 0x00,			/* 0x22b2[0:1] */
	IQ_CFG_CLIP1_WHITE_X_LVL,			/* 0x22b4 */
	IQ_CFG_CLIP1_WHITE_Y_LVL,			/* 0x22b5 */

	IQ_CFG_CLIP1_WHITE_X_THR,			/* 0x22b6 */
	IQ_CFG_CLIP1_WHITE_Y_THR,			/* 0x22b8 */

	IQ_CFG_CLIP1_DARK_CH,				/* 0x22b2[4:5] */
	IQ_CFG_CLIP1_DARK_X_LVL,			/* 0x22ba */
	IQ_CFG_CLIP1_DARK_Y_LVL,			/* 0x22bb */

	IQ_CFG_CLIP1_DARK_X_THR,			/* 0x22bc */
	IQ_CFG_CLIP1_DARK_Y_THR,			/* 0x22be */

	IQ_CFG_CLIP2_WHITE_CH,				/* 0x22e4[0] */
	IQ_CFG_CLIP2_WHITE_X_LVL,			/* 0x22e6 */
	IQ_CFG_CLIP2_WHITE_Y_LVL,			/* 0x22e7 */

	IQ_CFG_CLIP2_WHITE_X_THR,			/* 0x22e8 */
	IQ_CFG_CLIP2_WHITE_Y_THR,			/* 0x22e9 */

	IQ_CFG_CLIP2_DARK_CH,				/* 0x22e4[4:5] */
	IQ_CFG_CLIP2_DARK_X_LVL,			/* 0x22ea */
	IQ_CFG_CLIP2_DARK_Y_LVL,			/* 0x22eb */

	IQ_CFG_CLIP2_DARK_X_THR,			/* 0x22ec */
	IQ_CFG_CLIP2_DARK_Y_THR,			/* 0x22ed */

	IQ_CFG_CLIP_MAX,

	/* wdr */
	IQ_CFG_WDR_MODE						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_WDR_HEADER ) + 0x00,	/* 0x2370 */
	IQ_CFG_WDR_Q_SCALE_FACTOR,			/* 0x2372 */
	IQ_CFG_WDR_Q_ENHANCE_SCALE_FACTOR,	/* 0x2373 */

	IQ_CFG_WDR_MAX_Q_FACTOR,			/* 0x2374 */
	IQ_CFG_WDR_MAX_Q_THR,				/* 0x2376 */
	IQ_CFG_WDR_Q_FACTOR_SLOPE,			/* 0x2378 */

	IQ_CFG_WDR_CONTRAST_GAIN,			/*0x2371 */
	IQ_CFG_WDR_CONTRAST_OFS,			/*0x237a */

	IQ_CFG_WDR_THR_R,					/* 0x23c8 */
	IQ_CFG_WDR_THR_G,					/* 0x23ca */
	IQ_CFG_WDR_THR_B,					/* 0x23cc */

	IQ_CFG_WDR_MAX,

	/* color matrix */
	IQ_CFG_CM_ARRAY						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_CM_HEADER ) + 0x00,		/* 0x22c0 */

	IQ_CFG_CM_MAX						= IQ_CFG_CM_ARRAY + (IQ_PARAM_SIZE_CM+3)/4,

	/* rgb gamma */
	IQ_CFG_RGB_GAMMA_FLOW				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_RGB_GAMMA_HEADER ) + 0x00,			/* 0x22d8[2:3] */
	IQ_CFG_RGB_GAMMA_INVERSE,			/* 0x22d9 */
	IQ_CFG_RGB_GAMMA_3TBL,				/* 0x22d8[1] */

	IQ_CFG_RGB_GAMMA_MAX,

#if SPCA6330
	/* color matrix 2 */
	IQ_CFG_CM2_ARRAY					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_CM2_HEADER ) + 0x00,		/* 0x27c0 */

	IQ_CFG_CM2_MAX						= IQ_CFG_CM2_ARRAY + (IQ_PARAM_SIZE_CM+3)/4,
#endif

	/* hue correction */
	IQ_CFG_HUE_CLAMP_U					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_HUE_HEADER ) + 0x00, 			/* 0x22e1 */
	IQ_CFG_HUE_CLAMP_V, 				/* 0x22e2 */

	IQ_CFG_HUE_LOW_THR,				/* 0x22e3 */
	IQ_CFG_HUE_WIN_WEIGHT,				/* 0x22e0[4:6] */

	IQ_CFG_HUE_MAX,

	/* aa */
	IQ_CFG_AA_MODE						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_AA_HEADER ) + 0x00,	/* 0x2330 */
	IQ_CFG_AA_CLAMP_U,				/* 0x2331 */
	IQ_CFG_AA_CLAMP_V,					/* 0x2332 */

	IQ_CFG_AA_THR,						/* 0x2333 */
	IQ_CFG_AA_X_SUB,					/* 0x2334[0:1] */
	IQ_CFG_AA_Y_SUB,					/* 0x2334[4:5] */

	IQ_CFG_AA_SHRINK_MODE,				/* 0x2335[0:2] */
	IQ_CFG_AA_SHRINK_SCALE,			/* 0x2335[4:6] */

	IQ_CFG_AA_MAX,

	/* yef/ynf */
	IQ_CFG_YEF_FILTER					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_YEF_YNF_HEADER ) + 0x00,				/* 0x2301 */
	IQ_CFG_YEF_EDGE_PATTERN,			/* 0x2302 */
	IQ_CFG_YEF_YNF_THR,				/* 0x2303 */
	IQ_CFG_YEF_YNF_EDGE_DIV,			/* 0x2308 */
	IQ_CFG_YNF_EDGE_WEIGHTING,			/* 0x2304 */
	IQ_CFG_YNF_AREA_WEIGHTING,			/* 0x2305 */

	IQ_CFG_YEF_MAX,

	/* y edge */
	IQ_CFG_Y_EDGE_SCALE				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_Y_EDGE_HEADER ) + 0x00,			/* 0x2382[0:3] */
	IQ_CFG_Y_EDGE_INDEX,				/* 0x2382[4:5] */
	IQ_CFG_Y_EDGE_MAP_SCALE,			/* 0x2383 */

	IQ_CFG_Y_EDGE_LOW_THR,				/* 0x2390 */
	IQ_CFG_Y_EDGE_HIGH_THR,			/* 0x2392 */

	IQ_CFG_Y_EDGE_YH_GAIN,				/* 0x23a8 */
	IQ_CFG_Y_EDGE_FINAL_LOW_THR,		/* 0x23ac */
	IQ_CFG_Y_EDGE_FINAL_HIGH_THR,		/* 0x23ae */

	IQ_CFG_Y_EDGE_FW_GAIN,					/* fw gain for edge gain table */

	IQ_CFG_Y_EDGE_FILTER_ARRAY,		/* 0x2384 */
	IQ_CFG_Y_EDGE_GAIN_ARRAY			= IQ_CFG_Y_EDGE_FILTER_ARRAY + (IQ_PARAM_SIZE_EDGE_FLT+3)/4,	/* 0x2398 */

	IQ_CFG_Y_EDGE_MAX					= IQ_CFG_Y_EDGE_GAIN_ARRAY + (IQ_PARAM_SIZE_EDGE_GAIN+3)/4,

	IQ_CFG_Y_CORNER_EDGE_RATIO_SEL	= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_Y_CORNER_EDGE_HEADER) + 0x00,	/* 0x23b0 */
	IQ_CFG_Y_CORNER_EDGE_RATIO,	/* 0x23b1 */
	IQ_CFG_Y_CORNER_EDGE_IDX_OFFSET,
	IQ_CFG_Y_CORNER_EDGE_STEP1,
	IQ_CFG_Y_CORNER_EDGE_STEP2,
	IQ_CFG_Y_CORNER_EDGE_CX,
	IQ_CFG_Y_CORNER_EDGE_CY,
	IQ_CFG_Y_CORNER_EDGE_EG1,
	IQ_CFG_Y_CORNER_EDGE_EG2,
	IQ_CFG_Y_CORNER_EDGE_EG3,
	IQ_CFG_Y_CORNER_EDGE_EG4,

	IQ_CFG_Y_CORNER_EDGE_MAX,

	/* uv lpf */
	IQ_CFG_UV_LPF_MODE					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_UV_LPF_HEADER ) + 0x00,			/* 0x23c0[2] */
	IQ_CFG_UV_LPF_DIR_MEDIAN_WEIGHTING,	/* 0x23c2 */
	IQ_CFG_UV_LPF_AREA_MEDIAN_WEIGHTING,	/* 0x23c3 */
	IQ_CFG_UV_LPF_THR,						/* 0x23c4 */
	IQ_CFG_UV_LPF_DIR_MEDIAN_SEL,		/* 0x23c5[0:1] */
	IQ_CFG_UV_LPF_AREA_MEDIAN_SEL,		/* 0x23c5[4:5] */

	IQ_CFG_UV_LPF_SUP_EDGE_DIV,		/* 0x2308[0:2] */

#if SPCA6330
	IQ_CFG_UV_LPF_DIR_MODE,				/* 0x23c1[0] */
	IQ_CFG_UV_LPF_AREA_MODE,			/* 0x23c1[1] */
	IQ_CFG_UV_LPF_DIR_OPT,				/* 0x23c6[1:0] */
	IQ_CFG_UV_LPF_DIR_PAT_SEL,			/* 0x23c6[6:4] */
	IQ_CFG_UV_LPF_ARRAY_THR,			/* 0x2721 */
	IQ_CFG_UV_LPF_ARRAY,				/* 0x2710~0x2720 */
	
	IQ_CFG_UV_LPF_MAX					= IQ_CFG_UV_LPF_ARRAY + (IQ_PARAM_SIZE_LPF+3)/4,
#else
	IQ_CFG_UV_LPF_MAX,
#endif

	/* digital effect */
	IQ_CFG_YB_OFS						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_DIGITAL_EFFECT_HEADER ) + 0x00,				/* 0x23d1 */
	IQ_CFG_YC_FACTOR,					/* 0x23d2 */

	IQ_CFG_Y_THR,						/* 0x23d3 */
	IQ_CFG_UV_SAT_HUE_OFS_U,			/* 0x23e2 */
	IQ_CFG_UV_SAT_HUE_OFS_V,			/* 0x23e3 */

	IQ_CFG_SKETCH_BASE_VAL,				/* 0x20a6 */

	IQ_CFG_UV_SAT_HUE_MATRIX_ARRAY,	/* 0x23e4 */

	IQ_CFG_DIGI_EFF_MAX					= IQ_CFG_UV_SAT_HUE_MATRIX_ARRAY + (IQ_PARAM_SIZE_HUE+3)/4,

	/* ahd */
	IQ_CFG_AHD_SPK_OPT2_Y_L1			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_AHD_HEADER ) + 0x00,		/* 0x2181[4] */
	IQ_CFG_AHD_SPK_OPT3_Y_L1,			/* 0x2181[5] */
	IQ_CFG_AHD_SPK_OPT2_UV_L1,			/* 0x2181[6] */
	IQ_CFG_AHD_SPK_OPT3_UV_L1,			/* 0x2181[7] */

	IQ_CFG_AHD_SPK_OPT2_Y_L2,
	IQ_CFG_AHD_SPK_OPT3_Y_L2,
	IQ_CFG_AHD_SPK_OPT2_UV_L2,
	IQ_CFG_AHD_SPK_OPT3_UV_L2,

	IQ_CFG_AHD_SPK_OPT2_Y_L3,
	IQ_CFG_AHD_SPK_OPT3_Y_L3,
	IQ_CFG_AHD_SPK_OPT2_UV_L3,
	IQ_CFG_AHD_SPK_OPT3_UV_L3,

	IQ_CFG_AHD_SPK_OPT2_Y_L4,
	IQ_CFG_AHD_SPK_OPT3_Y_L4,
	IQ_CFG_AHD_SPK_OPT2_UV_L4,
	IQ_CFG_AHD_SPK_OPT3_UV_L4,

	IQ_CFG_AHD_SPK_OPT2_Y_L5,
	IQ_CFG_AHD_SPK_OPT3_Y_L5,
	IQ_CFG_AHD_SPK_OPT2_UV_L5,
	IQ_CFG_AHD_SPK_OPT3_UV_L5,

	IQ_CFG_AHD_VAR_SCALE_Y_L1,			/* 0x2188 */
	IQ_CFG_AHD_VAR_SCALE_U_L1,			/* 0x2189 */
	IQ_CFG_AHD_VAR_SCALE_V_L1,			/* 0x218a */

	IQ_CFG_AHD_VAR_SCALE_Y_L2,
	IQ_CFG_AHD_VAR_SCALE_U_L2,
	IQ_CFG_AHD_VAR_SCALE_V_L2,

	IQ_CFG_AHD_VAR_SCALE_Y_L3,
	IQ_CFG_AHD_VAR_SCALE_U_L3,
	IQ_CFG_AHD_VAR_SCALE_V_L3,

	IQ_CFG_AHD_VAR_SCALE_Y_L4,
	IQ_CFG_AHD_VAR_SCALE_U_L4,
	IQ_CFG_AHD_VAR_SCALE_V_L4,

	IQ_CFG_AHD_VAR_SCALE_Y_L5,
	IQ_CFG_AHD_VAR_SCALE_U_L5,
	IQ_CFG_AHD_VAR_SCALE_V_L5,

	IQ_CFG_AHD_LOW_THR_Y_L1,			/* 0x21c2[0:3], 0x218c[4:11] */
	IQ_CFG_AHD_LOW_THR_U_L1,			/* 0x21c2[4:7], 0x218d[4:11] */
	IQ_CFG_AHD_LOW_THR_V_L1,			/* 0x21c3[0:3], 0x218e[4:11] */

	IQ_CFG_AHD_LOW_THR_Y_L2,
	IQ_CFG_AHD_LOW_THR_U_L2,
	IQ_CFG_AHD_LOW_THR_V_L2,

	IQ_CFG_AHD_LOW_THR_Y_L3,
	IQ_CFG_AHD_LOW_THR_U_L3,
	IQ_CFG_AHD_LOW_THR_V_L3,

	IQ_CFG_AHD_LOW_THR_Y_L4,
	IQ_CFG_AHD_LOW_THR_U_L4,
	IQ_CFG_AHD_LOW_THR_V_L4,

	IQ_CFG_AHD_LOW_THR_Y_L5,
	IQ_CFG_AHD_LOW_THR_U_L5,
	IQ_CFG_AHD_LOW_THR_V_L5,

	IQ_CFG_AHD_HIGH_THR_Y_OPT0,		/* 0x21c4 */
	IQ_CFG_AHD_HIGH_THR_U_OPT0,		/* 0x21c6 */
	IQ_CFG_AHD_HIGH_THR_V_OPT0,		/* 0x21c8 */

	IQ_CFG_AHD_HIGH_THR_Y_OPT1,		/* 0x21ca */
	IQ_CFG_AHD_HIGH_THR_U_OPT1,		/* 0x21cc */
	IQ_CFG_AHD_HIGH_THR_V_OPT1,		/* 0x21ce */

	IQ_CFG_AHD_HIGH_THR_SEL,			/* 0x2187[4:5] */

	IQ_CFG_AHD_CONTRAST_GAIN_Y_L1,		/* 0x2190 */
	IQ_CFG_AHD_CONTRAST_GAIN_U_L1,		/* 0x2191 */
	IQ_CFG_AHD_CONTRAST_GAIN_V_L1,		/* 0x2192 */

	IQ_CFG_AHD_CONTRAST_GAIN_Y_L2,
	IQ_CFG_AHD_CONTRAST_GAIN_U_L2,
	IQ_CFG_AHD_CONTRAST_GAIN_V_L2,

	IQ_CFG_AHD_CONTRAST_GAIN_Y_L3,
	IQ_CFG_AHD_CONTRAST_GAIN_U_L3,
	IQ_CFG_AHD_CONTRAST_GAIN_V_L3,

	IQ_CFG_AHD_CONTRAST_GAIN_Y_L4,
	IQ_CFG_AHD_CONTRAST_GAIN_U_L4,
	IQ_CFG_AHD_CONTRAST_GAIN_V_L4,

	IQ_CFG_AHD_CONTRAST_GAIN_Y_L5,
	IQ_CFG_AHD_CONTRAST_GAIN_U_L5,
	IQ_CFG_AHD_CONTRAST_GAIN_V_L5,

	IQ_CFG_AHD_DN_Y_THR_CTR,		/* 5330:0x20a1[4:7] , 6330:0x2732 */
	IQ_CFG_AHD_DN_Y_POS_THR,		/* 5330:0x20a4~0x20a5, 6330:0x2736~0x2737 */
	IQ_CFG_AHD_DN_Y_NEG_THR,		/* 5330:0x20a2~0x20a3, 6330:0x2734~0x2735 */

#if SPCA6330
	IQ_CFG_AHD_DN_UV_THR_CTR,		/* 0x273a */
	IQ_CFG_AHD_DN_UV_POS_THR,		/* 0x273e~0x273f */
	IQ_CFG_AHD_DN_UV_NEG_THR,		/* 0x273c~0x273d */
#endif

	IQ_CFG_AHD_HF_THR_Y,				/* 0x2194 */
	IQ_CFG_AHD_HF_THR_UV,				/* 0x2195 */

	IQ_CFG_AHD_HF_GAIN_Y,				/* 0x2196 */
	IQ_CFG_AHD_HF_GAIN_UV,				/* 0x2197 */

	IQ_CFG_AHD_Y_START_LVL,				/* 0x21a0[0] */
	IQ_CFG_AHD_Y_END_LVL,				/* 0x21a0[0] */
	IQ_CFG_AHD_UV_START_LVL,			/* 0x21a0[1] */
	IQ_CFG_AHD_UV_END_LVL,				/* 0x21a0[1] */

	IQ_CFG_AHD_MAX,

	/* HDR */
	IQ_CFG_HDR_MIRROR					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_HDR_HEADER ) + 0x00,	/* 0x2491 */
	IQ_CFG_HDR_Y_HIGH_THR,				/* 0x2492 */
	IQ_CFG_HDR_Y_LOW_THR,				/* 0x2494 */
	IQ_CFG_HDR_Y_MEDIAN_THR,			/* 0x2496 */
	IQ_CFG_HDR_R_RATIO,					/* 0x2498 */
	IQ_CFG_HDR_B_RATIO,					/* 0x249a */
	IQ_CFG_HDR_IMG_A_SHIFT,				/* 0x249c[2:0] */
	IQ_CFG_HDR_IMG_B_SHIFT,				/* 0x249c[6:4] */
	IQ_CFG_HDR_OUTPUT_SHIFT,			/* 0x249d */
	IQ_CFG_HDR_MAX,

	/* temporal denoise */
	IQ_CFG_TEMPORAL_DENOISE_MASK			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_TEMPORAL_DENOISE_HEADER ) + 0x00,		/* 0x2341 */
	IQ_CFG_TEMPORAL_DENOISE_LOW_THR,		/* 0x2342 */
	IQ_CFG_TEMPORAL_DENOISE_HIGH_THR,		/* 0x2343 */

	IQ_CFG_TEMPORAL_DENOISE_Y_MIN_WEIGHT,	/* 0x2344 */
	IQ_CFG_TEMPORAL_DENOISE_Y_MAX_WEIGHT,	/* 0x2345 */
	IQ_CFG_TEMPORAL_DENOISE_Y_THR,			/* 0x2346 */
	IQ_CFG_TEMPORAL_DENOISE_Y_WEIGHING,	/* 0x2347 */

	IQ_CFG_TEMPORAL_DENOISE_UV_MIN_WEIGHT,	/* 0x2348 */
	IQ_CFG_TEMPORAL_DENOISE_UV_MAX_WEIGHT,	/* 0x2349 */
	IQ_CFG_TEMPORAL_DENOISE_UV_THR,		/* 0x234a */
	IQ_CFG_TEMPORAL_DENOISE_UV_WEIGHING,	/* 0x234b */

	IQ_CFG_TEMPORAL_DENOISE_GAIN,		/* 0~100 */

	IQ_CFG_TEMPORAL_DENOISE_LEVLE,		/* fw parameter */
	IQ_CFG_TEMPORAL_DENOISE_BASE_Y,		/* fw parameter */
	IQ_CFG_TEMPORAL_DENOISE_BASE_UV,	/* fw parameter */
	IQ_CFG_TEMPORAL_DENOISE_GAP,		/* fw parameter */

	IQ_CFG_TEMPORAL_DENOISE_MAX,

	/* ldc */
	IQ_CFG_LDC_GAIN					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_LDC_HEADER ) + 0x00,
	IQ_CFG_LDC_FISHEYE_LVL,

	/* internal */
	IQ_CFG_LDC_PARAM_PTR_INTERNAL,

	IQ_CFG_LDC_MAX,

	/* misc */
	IQ_CFG_SUP_POS						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_MISC_HEADER ) + 0x00,	/* 0x2381 */
	IQ_CFG_Y_GAMMA_INV,					/* 0x2360[1] */
	IQ_CFG_ICAT_ANSMATCH,
	IQ_CFG_REDO_POS,

	IQ_CFG_MISC_MAX,

	/*************PRE AHD BLOCK******************/
	/* hue correction */
	IQ_CFG_PRE_AHD_HUE_CLAMP_U			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_HUE_HEADER ) + 0x00, 			/* 0x22e1 */
	IQ_CFG_PRE_AHD_HUE_CLAMP_V, 		/* 0x22e2 */

	IQ_CFG_PRE_AHD_HUE_LOW_THR,			/* 0x22e3 */
	IQ_CFG_PRE_AHD_HUE_WIN_WEIGHT,		/* 0x22e0[4:6] */

	IQ_CFG_PRE_AHD_HUE_MAX,

	/* aa */
	IQ_CFG_PRE_AHD_AA_MODE				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_AA_HEADER ) + 0x00,				/* 0x2330 */
	IQ_CFG_PRE_AHD_AA_CLAMP_U,			/* 0x2231 */
	IQ_CFG_PRE_AHD_AA_CLAMP_V,			/* 0x2332 */

	IQ_CFG_PRE_AHD_AA_THR,				/* 0x2333 */
	IQ_CFG_PRE_AHD_AA_X_SUB,			/* 0x2334[0:1] */
	IQ_CFG_PRE_AHD_AA_Y_SUB,			/* 0x2334[4:5] */

	IQ_CFG_PRE_AHD_AA_SHRINK_MODE,		/* 0x2335[0:2] */
	IQ_CFG_PRE_AHD_AA_SHRINK_SCALE,		/* 0x2335[4:6] */

	IQ_CFG_PRE_AHD_AA_MAX,

	/* yef/ynf */
	IQ_CFG_PRE_AHD_YEF_FILTER			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_YEF_YNF_HEADER ) + 0x00,				/* 0x2301 */
	IQ_CFG_PRE_AHD_YEF_EDGE_PATTERN,	/* 0x2302 */
	IQ_CFG_PRE_AHD_YEF_YNF_THR,		/* 0x2303 */
	IQ_CFG_PRE_AHD_YEF_YNF_EDGE_DIV,	/* 0x2308 */
	IQ_CFG_PRE_AHD_YNF_EDGE_WEIGHTING,	/* 0x2304 */
	IQ_CFG_PRE_AHD_YNF_AREA_WEIGHTING,	/* 0x2304 */

	IQ_CFG_PRE_AHD_YEF_MAX,

	/* y edge */
	IQ_CFG_PRE_AHD_Y_EDGE_SCALE			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_Y_EDGE_HEADER ) + 0x00,			/* 0x2382[0:3] */
	IQ_CFG_PRE_AHD_Y_EDGE_INDEX,			/* 0x2382[4:5] */
	IQ_CFG_PRE_AHD_Y_EDGE_MAP_SCALE,		/* 0x2383 */

	IQ_CFG_PRE_AHD_Y_EDGE_LOW_THR,			/* 0x2390 */
	IQ_CFG_PRE_AHD_Y_EDGE_HIGH_THR,		/* 0x2392 */

	IQ_CFG_PRE_AHD_Y_EDGE_YH_GAIN,			/* 0x23a8 */
	IQ_CFG_PRE_AHD_Y_EDGE_FINAL_LOW_THR,	/* 0x23ac */
	IQ_CFG_PRE_AHD_Y_EDGE_FINAL_HIGH_THR,	/* 0x23ae */

	IQ_CFG_PRE_AHD_Y_EDGE_FW_GAIN,			/* fw gain for edge gain table */

	IQ_CFG_PRE_AHD_Y_EDGE_FILTER_ARRAY,		/* 0x2384 */
	IQ_CFG_PRE_AHD_Y_EDGE_GAIN_ARRAY		= IQ_CFG_PRE_AHD_Y_EDGE_FILTER_ARRAY + (IQ_PARAM_SIZE_EDGE_FLT+3)/4,	/* 0x2398 */

	IQ_CFG_PRE_AHD_Y_EDGE_MAX				= IQ_CFG_PRE_AHD_Y_EDGE_GAIN_ARRAY + (IQ_PARAM_SIZE_EDGE_GAIN+3)/4,

	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_RATIO_SEL	= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_Y_CORNER_EDGE_HEADER) + 0x00,	/* 0x23b0 */
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_RATIO,	/* 0x23b1 */
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_IDX_OFFSET,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_STEP1,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_STEP2,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_CX,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_CY,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_EG1,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_EG2,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_EG3,
	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_EG4,

	IQ_CFG_PRE_AHD_Y_CORNER_EDGE_MAX,

	/* uv lpf */
	IQ_CFG_PRE_AHD_UV_LPF_MODE						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_UV_LPF_HEADER ) + 0x00,			/* 0x23c0[2] */
	IQ_CFG_PRE_AHD_UV_LPF_DIR_MEDIAN_WEIGHTING,	/* 0x3c2 */
	IQ_CFG_PRE_AHD_UV_LPF_AREA_MEDIAN_WEIGHTING,	/* 0x23c3 */
	IQ_CFG_PRE_AHD_UV_LPF_THR,				/* 0x23c4 */
	IQ_CFG_PRE_AHD_UV_LPF_DIR_MEDIAN_SEL,	/* 0x23c5[0:1] */
	IQ_CFG_PRE_AHD_UV_LPF_AREA_MEDIAN_SEL,	/* 0x23c5[4:5] */

	IQ_CFG_PRE_AHD_UV_LPF_SUP_EDGE_DIV,		/* 0x2308[0:2] */

#if SPCA6330
	IQ_CFG_PRE_AHD_UV_LPF_DIR_MODE,			/* 0x23c1[0] */
	IQ_CFG_PRE_AHD_UV_LPF_AREA_MODE,		/* 0x23c1[1] */
	IQ_CFG_PRE_AHD_UV_LPF_DIR_OPT,			/* 0x23c6[1:0] */
	IQ_CFG_PRE_AHD_UV_LPF_DIR_PAT_SEL,		/* 0x23c6[6:4] */
	IQ_CFG_PRE_AHD_UV_LPF_ARRAY_THR,		/* 0x2721 */
	IQ_CFG_PRE_AHD_UV_LPF_ARRAY,			/* 0x2710~0x2720 */

	IQ_CFG_PRE_AHD_UV_LPF_MAX				= IQ_CFG_PRE_AHD_UV_LPF_ARRAY + (IQ_PARAM_SIZE_LPF+3)/4,
#else
	IQ_CFG_PRE_AHD_UV_LPF_MAX,
#endif

	/* digital effect */
	IQ_CFG_PRE_AHD_YB_OFS					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_PRE_AHD_DIGITAL_EFFECT_HEADER ) + 0x00,				/* 0x23d1 */
	IQ_CFG_PRE_AHD_YC_FACTOR,				/* 0x23d2 */

	IQ_CFG_PRE_AHD_Y_THR,					/* 0x23d3 */
	IQ_CFG_PRE_AHD_UV_SAT_HUE_OFS_U,		/* 0x23e2 */
	IQ_CFG_PRE_AHD_UV_SAT_HUE_OFS_V,		/* 0x23e3 */

	IQ_CFG_PRE_AHD_SKETCH_BASE_VAL,				/* 0x20a6 */

	IQ_CFG_PRE_AHD_UV_SAT_HUE_MATRIX_ARRAY,	/* 0x23e4 */

	IQ_CFG_PRE_AHD_DIGI_EFF_MAX			= IQ_CFG_PRE_AHD_UV_SAT_HUE_MATRIX_ARRAY + (IQ_PARAM_SIZE_HUE+3)/4,

	/*************AHD BLOCK******************/
	/* aa */
	IQ_CFG_AHD_AA_MODE					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_AHD_AA_HEADER ) + 0x00,				/* 0x2330 */
	IQ_CFG_AHD_AA_CLAMP_U,
	IQ_CFG_AHD_AA_CLAMP_V,				/* 0x2332 */

	IQ_CFG_AHD_AA_THR,						/* 0x2333 */
	IQ_CFG_AHD_AA_X_SUB,					/* 0x2334[0:1] */
	IQ_CFG_AHD_AA_Y_SUB,					/* 0x2334[4:5] */

	IQ_CFG_AHD_AA_SHRINK_MODE,				/* 0x2335[0:2] */
	IQ_CFG_AHD_AA_SHRINK_SCALE,			/* 0x2335[4:6] */

	IQ_CFG_AHD_AA_MAX,

	/* uv lpf */
	IQ_CFG_AHD_UV_LPF_MODE					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_AHD_UV_LPF_HEADER ) + 0x00,			/* 0x23c0[2] */
	IQ_CFG_AHD_UV_LPF_DIR_MEDIAN_WEIGHTING,	/* 0x3c2 */
	IQ_CFG_AHD_UV_LPF_AREA_MEDIAN_WEIGHTING,	/* 0x23c3 */
	IQ_CFG_AHD_UV_LPF_THR	,				/* 0x23c4 */
	IQ_CFG_AHD_UV_LPF_DIR_MEDIAN_SEL,		/* 0x23c5[0:1] */
	IQ_CFG_AHD_UV_LPF_AREA_MEDIAN_SEL,		/* 0x23c5[4:5] */

	IQ_CFG_AHD_UV_LPF_SUP_EDGE_DIV,			/* 0x2308[0:2] */

#if SPCA6330
	IQ_CFG_AHD_UV_LPF_DIR_MODE,			/* 0x23c1[0] */
	IQ_CFG_AHD_UV_LPF_AREA_MODE,		/* 0x23c1[1] */
	IQ_CFG_AHD_UV_LPF_DIR_OPT,			/* 0x23c6[1:0] */
	IQ_CFG_AHD_UV_LPF_DIR_PAT_SEL,		/* 0x23c6[6:4] */
	IQ_CFG_AHD_UV_LPF_ARRAY_THR,		/* 0x2721 */
	IQ_CFG_AHD_UV_LPF_ARRAY,			/* 0x2710~0x2720 */

	IQ_CFG_AHD_UV_LPF_MAX				= IQ_CFG_AHD_UV_LPF_ARRAY + (IQ_PARAM_SIZE_LPF+3)/4,
#else
	IQ_CFG_AHD_UV_LPF_MAX,
#endif

	/*************REDO BLOCK******************/
	/* hue correction */
	IQ_CFG_REDO_HUE_CLAMP_U			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_HUE_HEADER ) + 0x00, 			/* 0x22e1 */
	IQ_CFG_REDO_HUE_CLAMP_V, 		/* 0x22e2 */

	IQ_CFG_REDO_HUE_LOW_THR,			/* 0x22e3 */
	IQ_CFG_REDO_HUE_WIN_WEIGHT,		/* 0x22e0[4:6] */

	IQ_CFG_REDO_HUE_MAX,

	/* aa */
	IQ_CFG_REDO_AA_MODE				= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_AA_HEADER ) + 0x00,				/* 0x2330 */
	IQ_CFG_REDO_AA_CLAMP_U,			/* 0x2231 */
	IQ_CFG_REDO_AA_CLAMP_V,			/* 0x2332 */

	IQ_CFG_REDO_AA_THR,				/* 0x2333 */
	IQ_CFG_REDO_AA_X_SUB,			/* 0x2334[0:1] */
	IQ_CFG_REDO_AA_Y_SUB,			/* 0x2334[4:5] */

	IQ_CFG_REDO_AA_SHRINK_MODE,		/* 0x2335[0:2] */
	IQ_CFG_REDO_AA_SHRINK_SCALE,		/* 0x2335[4:6] */

	IQ_CFG_REDO_AA_MAX,

	/* yef/ynf */
	IQ_CFG_REDO_YEF_FILTER			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_YEF_YNF_HEADER ) + 0x00,				/* 0x2301 */
	IQ_CFG_REDO_YEF_EDGE_PATTERN,	/* 0x2302 */
	IQ_CFG_REDO_YEF_YNF_THR,		/* 0x2303 */
	IQ_CFG_REDO_YEF_YNF_EDGE_DIV,	/* 0x2308 */
	IQ_CFG_REDO_YNF_EDGE_WEIGHTING,	/* 0x2304 */
	IQ_CFG_REDO_YNF_AREA_WEIGHTING,	/* 0x2304 */

	IQ_CFG_REDO_YEF_MAX,

	/* y edge */
	IQ_CFG_REDO_Y_EDGE_SCALE			= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_Y_EDGE_HEADER ) + 0x00,			/* 0x2382[0:3] */
	IQ_CFG_REDO_Y_EDGE_INDEX,			/* 0x2382[4:5] */
	IQ_CFG_REDO_Y_EDGE_MAP_SCALE,		/* 0x2383 */

	IQ_CFG_REDO_Y_EDGE_LOW_THR,			/* 0x2390 */
	IQ_CFG_REDO_Y_EDGE_HIGH_THR,		/* 0x2392 */

	IQ_CFG_REDO_Y_EDGE_YH_GAIN,			/* 0x23a8 */
	IQ_CFG_REDO_Y_EDGE_FINAL_LOW_THR,	/* 0x23ac */
	IQ_CFG_REDO_Y_EDGE_FINAL_HIGH_THR,	/* 0x23ae */

	IQ_CFG_REDO_Y_EDGE_FW_GAIN,			/* fw gain for edge gain table */

	IQ_CFG_REDO_Y_EDGE_FILTER_ARRAY,		/* 0x2384 */
	IQ_CFG_REDO_Y_EDGE_GAIN_ARRAY		= IQ_CFG_REDO_Y_EDGE_FILTER_ARRAY + (IQ_PARAM_SIZE_EDGE_FLT+3)/4,	/* 0x2398 */

	IQ_CFG_REDO_Y_EDGE_MAX				= IQ_CFG_REDO_Y_EDGE_GAIN_ARRAY + (IQ_PARAM_SIZE_EDGE_GAIN+3)/4,

	IQ_CFG_REDO_Y_CORNER_EDGE_RATIO_SEL	= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_Y_CORNER_EDGE_HEADER) + 0x00,	/* 0x23b0 */
	IQ_CFG_REDO_Y_CORNER_EDGE_RATIO,	/* 0x23b1 */
	IQ_CFG_REDO_Y_CORNER_EDGE_IDX_OFFSET,
	IQ_CFG_REDO_Y_CORNER_EDGE_STEP1,
	IQ_CFG_REDO_Y_CORNER_EDGE_STEP2,
	IQ_CFG_REDO_Y_CORNER_EDGE_CX,
	IQ_CFG_REDO_Y_CORNER_EDGE_CY,
	IQ_CFG_REDO_Y_CORNER_EDGE_EG1,
	IQ_CFG_REDO_Y_CORNER_EDGE_EG2,
	IQ_CFG_REDO_Y_CORNER_EDGE_EG3,
	IQ_CFG_REDO_Y_CORNER_EDGE_EG4,

	IQ_CFG_REDO_Y_CORNER_EDGE_MAX,

	/* uv lpf */
	IQ_CFG_REDO_UV_LPF_MODE						= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_UV_LPF_HEADER ) + 0x00,			/* 0x23c0[2] */
	IQ_CFG_REDO_UV_LPF_DIR_MEDIAN_WEIGHTING,	/* 0x3c2 */
	IQ_CFG_REDO_UV_LPF_AREA_MEDIAN_WEIGHTING,	/* 0x23c3 */
	IQ_CFG_REDO_UV_LPF_THR,				/* 0x23c4 */
	IQ_CFG_REDO_UV_LPF_DIR_MEDIAN_SEL,	/* 0x23c5[0:1] */
	IQ_CFG_REDO_UV_LPF_AREA_MEDIAN_SEL,	/* 0x23c5[4:5] */

	IQ_CFG_REDO_UV_LPF_SUP_EDGE_DIV,		/* 0x2308[0:2] */

#if SPCA6330
	IQ_CFG_REDO_UV_LPF_DIR_MODE,		/* 0x23c1[0] */
	IQ_CFG_REDO_UV_LPF_AREA_MODE,		/* 0x23c1[1] */
	IQ_CFG_REDO_UV_LPF_DIR_OPT,			/* 0x23c6[1:0] */
	IQ_CFG_REDO_UV_LPF_DIR_PAT_SEL,		/* 0x23c6[6:4] */
	IQ_CFG_REDO_UV_LPF_ARRAY_THR,		/* 0x2721 */
	IQ_CFG_REDO_UV_LPF_ARRAY,			/* 0x2710~0x2720 */

	IQ_CFG_REDO_UV_LPF_MAX				= IQ_CFG_REDO_UV_LPF_ARRAY + (IQ_PARAM_SIZE_LPF+3)/4,
#else
	IQ_CFG_REDO_UV_LPF_MAX,
#endif

	/* digital effect */
	IQ_CFG_REDO_YB_OFS					= IQ_CFG_HEADER_SET( IQ_CFG_COMMON_HEADER, IQ_CFG_REDO_DIGITAL_EFFECT_HEADER ) + 0x00,				/* 0x23d1 */
	IQ_CFG_REDO_YC_FACTOR,				/* 0x23d2 */

	IQ_CFG_REDO_Y_THR,					/* 0x23d3 */
	IQ_CFG_REDO_UV_SAT_HUE_OFS_U,		/* 0x23e2 */
	IQ_CFG_REDO_UV_SAT_HUE_OFS_V,		/* 0x23e3 */

	IQ_CFG_REDO_SKETCH_BASE_VAL,				/* 0x20a6 */

	IQ_CFG_REDO_UV_SAT_HUE_MATRIX_ARRAY,	/* 0x23e4 */

	IQ_CFG_REDO_DIGI_EFF_MAX			= IQ_CFG_REDO_UV_SAT_HUE_MATRIX_ARRAY + (IQ_PARAM_SIZE_HUE+3)/4,

} cdspIqCfgSelector_t;

typedef enum cdspIqResLutAdjustId_e{
	IQ_RES_LUT_ADJUST_LDC_GAIN,
	IQ_RES_LUT_ADJUST_FISHEYE_LVL,
	IQ_RES_LUT_ADJUST_LSC_GAIN,
	IQ_RES_LUT_ADJUST_CA_GAIN,
} cdspIqResLutAdjustId_t;

/**************************************************************************
 *                          D A T A    T Y P E S                          *
 **************************************************************************/

typedef struct {
	UINT16 rgain;
	UINT16 grgain;
	UINT16 bgain;
	UINT16 gbgain;
} cdspWbGain_t;

typedef struct {
	UINT16 gain;
	UINT16 baseCh;
	UINT16 oneCh;
} cdspResLutLscGainParam_t;


typedef struct {
	UINT16 rXGain;
	UINT16 rYGain;
	UINT16 bXGain;
	UINT16 bYGain;
} cdspCaGain_t;

/**************************************************************************
 *               F U N C T I O N    D E C L A R A T I O N S               *
 **************************************************************************/

#ifdef __cplusplus
}
#endif

#endif /* _CDSP_DEF_H_ */


